<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india' inline='true' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.08t0cdz1hltow81a7s1hg012vyfh'>
            <connection class='textscan' directory='C:/Users/Hp/Downloads/Covid 19 India Dataset-20210617T112420Z-001/Covid 19 India Dataset' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.08t0cdz1hltow81a7s1hg012vyfh' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.08t0cdz1hltow81a7s1hg012vyfh' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%cured_India' datatype='real' name='[Calculation_1110137362742657025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
      </column>
      <column caption='%death_India' datatype='real' name='[Calculation_1110137362743595010]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Deaths])/SUM([Confirmed]))*100)' />
      </column>
      <column caption='%cured' datatype='real' name='[Calculation_1110137362759008259]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((MAX([Cured])/MAX([Confirmed])))*100' />
      </column>
      <column caption='%deaths' datatype='real' name='[Calculation_1110137362759340036]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1110137362742657025]' derivation='User' name='[usr:Calculation_1110137362742657025:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1110137362743595010]' derivation='User' name='[usr:Calculation_1110137362743595010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1110137362759008259]' derivation='User' name='[usr:Calculation_1110137362759008259:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1110137362759340036]' derivation='User' name='[usr:Calculation_1110137362759340036:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nagaland\#&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759340036:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759008259:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_4F94B66F319340FDB8060DF98D49C2D0'>
            <properties context=''>
              <relation connection='textscan.08t0cdz1hltow81a7s1hg012vyfh' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='HospitalBedsIndia+' inline='true' name='federated.1hdhuu31k2780r12k9ddt16qb79u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='HospitalBedsIndia' name='textscan.137oek009dtxpm19tk5n21r1p0qn'>
            <connection class='textscan' directory='C:/Users/Hp/Downloads/Covid 19 India Dataset-20210617T112420Z-001/Covid 19 India Dataset' filename='HospitalBedsIndia.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.137oek009dtxpm19tk5n21r1p0qn' name='HospitalBedsIndia.csv' table='[HospitalBedsIndia#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='string' name='State/UT' ordinal='1' />
            <column datatype='integer' name='NumPrimaryHealthCenters_HMIS' ordinal='2' />
            <column datatype='integer' name='NumCommunityHealthCenters_HMIS' ordinal='3' />
            <column datatype='integer' name='NumSubDistrictHospitals_HMIS' ordinal='4' />
            <column datatype='integer' name='NumDistrictHospitals_HMIS' ordinal='5' />
            <column datatype='integer' name='TotalPublicHealthFacilities_HMIS' ordinal='6' />
            <column datatype='integer' name='NumPublicBeds_HMIS' ordinal='7' />
            <column datatype='integer' name='NumRuralHospitals_NHP18' ordinal='8' />
            <column datatype='integer' name='NumRuralBeds_NHP18' ordinal='9' />
            <column datatype='integer' name='NumUrbanHospitals_NHP18' ordinal='10' />
            <column datatype='integer' name='NumUrbanBeds_NHP18' ordinal='11' />
            <column datatype='string' name='F13' ordinal='12' />
            <column datatype='string' name='F14' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.137oek009dtxpm19tk5n21r1p0qn' name='HospitalBedsIndia.csv' table='[HospitalBedsIndia#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Sno' ordinal='0' />
              <column datatype='string' name='State/UT' ordinal='1' />
              <column datatype='integer' name='NumPrimaryHealthCenters_HMIS' ordinal='2' />
              <column datatype='integer' name='NumCommunityHealthCenters_HMIS' ordinal='3' />
              <column datatype='integer' name='NumSubDistrictHospitals_HMIS' ordinal='4' />
              <column datatype='integer' name='NumDistrictHospitals_HMIS' ordinal='5' />
              <column datatype='integer' name='TotalPublicHealthFacilities_HMIS' ordinal='6' />
              <column datatype='integer' name='NumPublicBeds_HMIS' ordinal='7' />
              <column datatype='integer' name='NumRuralHospitals_NHP18' ordinal='8' />
              <column datatype='integer' name='NumRuralBeds_NHP18' ordinal='9' />
              <column datatype='integer' name='NumUrbanHospitals_NHP18' ordinal='10' />
              <column datatype='integer' name='NumUrbanBeds_NHP18' ordinal='11' />
              <column datatype='string' name='F13' ordinal='12' />
              <column datatype='string' name='F14' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.137oek009dtxpm19tk5n21r1p0qn' name='population_india_census2011.csv' table='[population_india_census2011#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Sno' ordinal='0' />
              <column datatype='string' name='State / Union Territory' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='integer' name='Rural population' ordinal='3' />
              <column datatype='integer' name='Urban population' ordinal='4' />
              <column datatype='string' name='Area' ordinal='5' />
              <column datatype='string' name='Density' ordinal='6' />
              <column datatype='integer' name='Gender Ratio' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Area]' value='[population_india_census2011.csv].[Area]' />
          <map key='[Density]' value='[population_india_census2011.csv].[Density]' />
          <map key='[F13]' value='[HospitalBedsIndia.csv].[F13]' />
          <map key='[F14]' value='[HospitalBedsIndia.csv].[F14]' />
          <map key='[Gender Ratio]' value='[population_india_census2011.csv].[Gender Ratio]' />
          <map key='[NumCommunityHealthCenters_HMIS]' value='[HospitalBedsIndia.csv].[NumCommunityHealthCenters_HMIS]' />
          <map key='[NumDistrictHospitals_HMIS]' value='[HospitalBedsIndia.csv].[NumDistrictHospitals_HMIS]' />
          <map key='[NumPrimaryHealthCenters_HMIS]' value='[HospitalBedsIndia.csv].[NumPrimaryHealthCenters_HMIS]' />
          <map key='[NumPublicBeds_HMIS]' value='[HospitalBedsIndia.csv].[NumPublicBeds_HMIS]' />
          <map key='[NumRuralBeds_NHP18]' value='[HospitalBedsIndia.csv].[NumRuralBeds_NHP18]' />
          <map key='[NumRuralHospitals_NHP18]' value='[HospitalBedsIndia.csv].[NumRuralHospitals_NHP18]' />
          <map key='[NumSubDistrictHospitals_HMIS]' value='[HospitalBedsIndia.csv].[NumSubDistrictHospitals_HMIS]' />
          <map key='[NumUrbanBeds_NHP18]' value='[HospitalBedsIndia.csv].[NumUrbanBeds_NHP18]' />
          <map key='[NumUrbanHospitals_NHP18]' value='[HospitalBedsIndia.csv].[NumUrbanHospitals_NHP18]' />
          <map key='[Population]' value='[population_india_census2011.csv].[Population]' />
          <map key='[Rural population]' value='[population_india_census2011.csv].[Rural population]' />
          <map key='[Sno (population_india_census2011.csv)]' value='[population_india_census2011.csv].[Sno]' />
          <map key='[Sno]' value='[HospitalBedsIndia.csv].[Sno]' />
          <map key='[State / Union Territory]' value='[population_india_census2011.csv].[State / Union Territory]' />
          <map key='[State/UT]' value='[HospitalBedsIndia.csv].[State/UT]' />
          <map key='[TotalPublicHealthFacilities_HMIS]' value='[HospitalBedsIndia.csv].[TotalPublicHealthFacilities_HMIS]' />
          <map key='[Urban population]' value='[population_india_census2011.csv].[Urban population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UT]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>State/UT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumPrimaryHealthCenters_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumPrimaryHealthCenters_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumPrimaryHealthCenters_HMIS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumCommunityHealthCenters_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumCommunityHealthCenters_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumCommunityHealthCenters_HMIS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumSubDistrictHospitals_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumSubDistrictHospitals_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumSubDistrictHospitals_HMIS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumDistrictHospitals_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumDistrictHospitals_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumDistrictHospitals_HMIS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPublicHealthFacilities_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPublicHealthFacilities_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>TotalPublicHealthFacilities_HMIS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumPublicBeds_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumPublicBeds_HMIS]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumPublicBeds_HMIS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumRuralHospitals_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumRuralHospitals_NHP18]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumRuralHospitals_NHP18</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumRuralBeds_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumRuralBeds_NHP18]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumRuralBeds_NHP18</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumUrbanHospitals_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumUrbanHospitals_NHP18]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumUrbanHospitals_NHP18</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumUrbanBeds_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumUrbanBeds_NHP18]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>NumUrbanBeds_NHP18</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[HospitalBedsIndia.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno (population_india_census2011.csv)]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State / Union Territory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State / Union Territory]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>State / Union Territory</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rural population]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Rural population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban population]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Urban population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Density]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Density</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender Ratio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gender Ratio]</local-name>
            <parent-name>[population_india_census2011.csv]</parent-name>
            <remote-alias>Gender Ratio</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='No. of people sharing 1 rural bed' datatype='real' name='[Calculation_1110137362772299783]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Rural population]/[NumRuralBeds_NHP18]' />
      </column>
      <column caption='No. of people sharing 1 urban bed' datatype='real' name='[Calculation_1110137362774134792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Urban population]/[NumUrbanBeds_NHP18]' />
      </column>
      <column caption='NumCommunityHealthCenters HMIS' datatype='integer' name='[NumCommunityHealthCenters_HMIS]' role='measure' type='quantitative' />
      <column caption='NumDistrictHospitals HMIS' datatype='integer' name='[NumDistrictHospitals_HMIS]' role='measure' type='quantitative' />
      <column caption='NumPrimaryHealthCenters HMIS' datatype='integer' name='[NumPrimaryHealthCenters_HMIS]' role='measure' type='quantitative' />
      <column caption='NumPublicBeds HMIS' datatype='integer' name='[NumPublicBeds_HMIS]' role='measure' type='quantitative' />
      <column caption='NumRuralBeds NHP18' datatype='integer' name='[NumRuralBeds_NHP18]' role='measure' type='quantitative' />
      <column caption='NumRuralHospitals NHP18' datatype='integer' name='[NumRuralHospitals_NHP18]' role='measure' type='quantitative' />
      <column caption='NumSubDistrictHospitals HMIS' datatype='integer' name='[NumSubDistrictHospitals_HMIS]' role='measure' type='quantitative' />
      <column caption='NumUrbanBeds NHP18' datatype='integer' name='[NumUrbanBeds_NHP18]' role='measure' type='quantitative' />
      <column caption='NumUrbanHospitals NHP18' datatype='integer' name='[NumUrbanHospitals_NHP18]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rural population]' role='measure' type='quantitative' />
      <column caption='Sno (population india census2011.csv)' datatype='integer' name='[Sno (population_india_census2011.csv)]' role='measure' type='quantitative' />
      <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State/UT]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='TotalPublicHealthFacilities HMIS' datatype='integer' name='[TotalPublicHealthFacilities_HMIS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Urban population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='HospitalBedsIndia.csv' datatype='table' name='[__tableau_internal_object_id__].[HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_india_census2011.csv' datatype='table' name='[__tableau_internal_object_id__].[population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1110137362772299783]' derivation='Sum' name='[sum:Calculation_1110137362772299783:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1110137362774134792]' derivation='Sum' name='[sum:Calculation_1110137362774134792:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumRuralBeds_NHP18]' derivation='Sum' name='[sum:NumRuralBeds_NHP18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumUrbanBeds_NHP18]' derivation='Sum' name='[sum:NumUrbanBeds_NHP18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rural population]' derivation='Sum' name='[sum:Rural population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban population]' derivation='Sum' name='[sum:Urban population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Calculation_1110137362774134792:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Calculation_1110137362772299783:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:NumUrbanBeds_NHP18:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Urban population:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:NumRuralBeds_NHP18:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Rural population:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='HospitalBedsIndia.csv' id='HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA'>
            <properties context=''>
              <relation connection='textscan.137oek009dtxpm19tk5n21r1p0qn' name='HospitalBedsIndia.csv' table='[HospitalBedsIndia#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='string' name='State/UT' ordinal='1' />
                  <column datatype='integer' name='NumPrimaryHealthCenters_HMIS' ordinal='2' />
                  <column datatype='integer' name='NumCommunityHealthCenters_HMIS' ordinal='3' />
                  <column datatype='integer' name='NumSubDistrictHospitals_HMIS' ordinal='4' />
                  <column datatype='integer' name='NumDistrictHospitals_HMIS' ordinal='5' />
                  <column datatype='integer' name='TotalPublicHealthFacilities_HMIS' ordinal='6' />
                  <column datatype='integer' name='NumPublicBeds_HMIS' ordinal='7' />
                  <column datatype='integer' name='NumRuralHospitals_NHP18' ordinal='8' />
                  <column datatype='integer' name='NumRuralBeds_NHP18' ordinal='9' />
                  <column datatype='integer' name='NumUrbanHospitals_NHP18' ordinal='10' />
                  <column datatype='integer' name='NumUrbanBeds_NHP18' ordinal='11' />
                  <column datatype='string' name='F13' ordinal='12' />
                  <column datatype='string' name='F14' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_india_census2011.csv' id='population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C'>
            <properties context=''>
              <relation connection='textscan.137oek009dtxpm19tk5n21r1p0qn' name='population_india_census2011.csv' table='[population_india_census2011#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='string' name='State / Union Territory' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='Rural population' ordinal='3' />
                  <column datatype='integer' name='Urban population' ordinal='4' />
                  <column datatype='string' name='Area' ordinal='5' />
                  <column datatype='string' name='Density' ordinal='6' />
                  <column datatype='integer' name='Gender Ratio' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Sno]' />
              <expression op='[Sno (population_india_census2011.csv)]' />
            </expression>
            <first-end-point object-id='HospitalBedsIndia.csv_DE2984079A244DFBB7EB86CC5D43D0EA' />
            <second-end-point object-id='population_india_census2011.csv_05AD0E0D015E4E24ADBD6D0E2535405C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1hdhuu31k2780r12k9ddt16qb79u'>
      <datasources>
        <datasource caption='HospitalBedsIndia+' name='federated.1hdhuu31k2780r12k9ddt16qb79u' />
      </datasources>
      <datasource-dependencies datasource='federated.1hdhuu31k2780r12k9ddt16qb79u'>
        <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]'>
        <groupfilter function='member' level='[none:State / Union Territory:nk]' member='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Availability of hospital beds in chosen states'>
      <table>
        <view>
          <datasources>
            <datasource caption='HospitalBedsIndia+' name='federated.1hdhuu31k2780r12k9ddt16qb79u' />
          </datasources>
          <datasource-dependencies datasource='federated.1hdhuu31k2780r12k9ddt16qb79u'>
            <column caption='No. of people sharing 1 rural bed' datatype='real' name='[Calculation_1110137362772299783]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Rural population]/[NumRuralBeds_NHP18]' />
            </column>
            <column caption='No. of people sharing 1 urban bed' datatype='real' name='[Calculation_1110137362774134792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Urban population]/[NumUrbanBeds_NHP18]' />
            </column>
            <column caption='NumRuralBeds NHP18' datatype='integer' name='[NumRuralBeds_NHP18]' role='measure' type='quantitative' />
            <column caption='NumUrbanBeds NHP18' datatype='integer' name='[NumUrbanBeds_NHP18]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rural population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Urban population]' role='measure' type='quantitative' />
            <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1110137362772299783]' derivation='Sum' name='[sum:Calculation_1110137362772299783:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110137362774134792]' derivation='Sum' name='[sum:Calculation_1110137362774134792:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Calculation_1110137362772299783:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Calculation_1110137362774134792:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</column>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]</rows>
        <cols>([federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk] / [federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{67FB138F-3C52-46A4-A306-A8DEC106222D}' />
    </worksheet>
    <worksheet name='Comparison of deaths vs cured of chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column caption='%cured' datatype='real' name='[Calculation_1110137362759008259]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((MAX([Cured])/MAX([Confirmed])))*100' />
            </column>
            <column caption='%deaths' datatype='real' name='[Calculation_1110137362759340036]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110137362759008259]' derivation='User' name='[usr:Calculation_1110137362759008259:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110137362759340036]' derivation='User' name='[usr:Calculation_1110137362759340036:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759340036:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759008259:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759340036:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759008259:qk] + ([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362759340036:qk] + [federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]))</rows>
        <cols>([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk] * [federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{14503EA6-86C3-4598-91D8-C09D01F1A932}' />
    </worksheet>
    <worksheet name='Covid-19 India'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Latitude (generated)]</column>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eddbd6</color>
                <color>#eac6bb</color>
                <color>#e7b2a2</color>
                <color>#e39e89</color>
                <color>#e08b71</color>
                <color>#dd7859</color>
                <color>#d96642</color>
                <color>#d6542c</color>
                <color>#d34216</color>
                <color>#d03202</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' />
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' />
              <geometry column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. of confirmed cases:</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Latitude (generated)]</rows>
        <cols>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B1B9FE5C-C57E-4F08-BDFC-237398470088}' />
    </worksheet>
    <worksheet name='Percentage comparison of deaths vs cured'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column caption='%cured_India' datatype='real' name='[Calculation_1110137362742657025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
            </column>
            <column caption='%death_India' datatype='real' name='[Calculation_1110137362743595010]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Deaths])/SUM([Confirmed]))*100)' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110137362742657025]' derivation='User' name='[usr:Calculation_1110137362742657025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110137362743595010]' derivation='User' name='[usr:Calculation_1110137362743595010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%cured_India:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]>%]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%death_India:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk] + ([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk] + [federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]))</rows>
        <cols>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='223'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%death_India: </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>0.0</value>
                    <value>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362743595010:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-211' y='-75' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='227'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%cured_India: </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>7.6923076923076925</value>
                    <value>&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[usr:Calculation_1110137362742657025:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-199' y='-136' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{7ED1885F-F3D0-4349-BBD2-618B6B1B6389}' />
    </worksheet>
    <worksheet name='Percentage distribution of Confirmed Cases (each state)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontcolor='#4e79a7' fontsize='12'>Top 10 most infected States highlighted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:qk]' included-values='in-range'>
            <min>#2020-04-16#</min>
            <max>#2020-04-16#</max>
          </filter>
          <manual-sort column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Nagaland\#&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Telengana&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]' />
              <size column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Delhi&quot;</value>
                    <value>1578</value>
                    <value>0.12367740418528098</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='184' y='65' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]</field>
                      <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Tamil Nadu&quot;</value>
                    <value>1242</value>
                    <value>0.097343051963320007</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-97' y='-88' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C31A1A17-9CE2-4936-85ED-36F419481CA4}' />
    </worksheet>
    <worksheet name='Population of chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='HospitalBedsIndia+' name='federated.1hdhuu31k2780r12k9ddt16qb79u' />
          </datasources>
          <datasource-dependencies datasource='federated.1hdhuu31k2780r12k9ddt16qb79u'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rural population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Urban population]' role='measure' type='quantitative' />
            <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population]' derivation='Sum' name='[sum:Rural population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban population]' derivation='Sum' name='[sum:Urban population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Rural population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Urban population:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</column>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
              <text column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
              <text column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Rural population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
              <text column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Urban population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
              <text column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Population:qk] + ([federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Rural population:qk] + [federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:Urban population:qk]))</rows>
        <cols>([federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk] / [federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{BC142DD2-B32F-4B7C-9562-C5632E471897}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]</rows>
        <cols>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{FBFFB660-9BE6-4D89-8ABB-1E6C98A9DCD2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:ok]</column>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:ok]' value='251' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</rows>
        <cols>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[twk:Date:ok]</cols>
      </table>
      <simple-id uuid='{5E13D104-C753-4A57-8E34-37D0E0F1BC5A}' />
    </worksheet>
    <worksheet name='State wise no of confirmed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' />
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffaa7f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]</rows>
        <cols>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{E4E3792D-D826-4131-A716-B7026BF078E6}' />
    </worksheet>
    <worksheet name='Statistics of a chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
          </datasources>
          <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</column>
            <column>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' />
              <text column='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk] + ([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Cured:qk] + [federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Deaths:qk]))</rows>
        <cols>([federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk] / [federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{44AD5D55-7D7D-4224-AF9D-F15F29C052A9}' />
    </worksheet>
    <worksheet name='statistics of hospital beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='HospitalBedsIndia+' name='federated.1hdhuu31k2780r12k9ddt16qb79u' />
          </datasources>
          <datasource-dependencies datasource='federated.1hdhuu31k2780r12k9ddt16qb79u'>
            <column caption='NumRuralBeds NHP18' datatype='integer' name='[NumRuralBeds_NHP18]' role='measure' type='quantitative' />
            <column caption='NumUrbanBeds NHP18' datatype='integer' name='[NumUrbanBeds_NHP18]' role='measure' type='quantitative' />
            <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[NumRuralBeds_NHP18]' derivation='Sum' name='[sum:NumRuralBeds_NHP18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumUrbanBeds_NHP18]' derivation='Sum' name='[sum:NumUrbanBeds_NHP18:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:NumRuralBeds_NHP18:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hdhuu31k2780r12k9ddt16qb79u].[sum:NumUrbanBeds_NHP18:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</column>
            <column>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hdhuu31k2780r12k9ddt16qb79u].[Multiple Values]</rows>
        <cols>([federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk] / [federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{31CB8B92-571C-485A-BA6A-7ED4E3D3DBC5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid 19 India State wise Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1900' minheight='800' minwidth='1800' sizing-mode='range' />
      <datasources>
        <datasource caption='covid_19_india' name='federated.0gmvt7n0yah6ja10tguc81fkv1uv' />
      </datasources>
      <datasource-dependencies datasource='federated.0gmvt7n0yah6ja10tguc81fkv1uv'>
        <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98098' id='20' param='vert' w='99112' x='444' y='951'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5945' id='21' w='99112' x='444' y='951'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92153' id='18' w='99112' x='444' y='6896' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33294' id='3' name='State wise no of confirmed cases' w='77000' x='1111' y='14982' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10464' id='8' name='State wise no of confirmed cases' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' w='7778' x='82111' y='12842' />
        <zone h='49346' id='9' name='Statistics of a chosen state' w='39333' x='1500' y='49584' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7253' id='14' mode='dropdown' name='Statistics of a chosen state' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' w='9333' x='80111' y='34958' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10107' id='15' name='Statistics of a chosen state' pane-specification-id='1' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' w='7778' x='82500' y='55529' />
        <zone h='47087' id='16' name='Comparison of deaths vs cured of chosen state' w='39722' x='41611' y='52438' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98098' id='22' param='vert' w='99112' x='444' y='951'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5945' id='21' w='99112' x='444' y='951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33294' id='3' is-fixed='true' name='State wise no of confirmed cases' w='77000' x='1111' y='14982'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10464' id='8' name='State wise no of confirmed cases' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' w='7778' x='82111' y='12842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7253' id='14' mode='dropdown' name='Statistics of a chosen state' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' w='9333' x='80111' y='34958'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49346' id='9' is-fixed='true' name='Statistics of a chosen state' w='39333' x='1500' y='49584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10107' id='15' name='Statistics of a chosen state' pane-specification-id='1' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' w='7778' x='82500' y='55529'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47087' id='16' is-fixed='true' name='Comparison of deaths vs cured of chosen state' w='39722' x='41611' y='52438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DBF84E34-09DA-46CA-9C26-0A7BCDF168F2}' />
    </dashboard>
    <dashboard name='Covid-19 India Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='860' maxwidth='1920' minheight='560' minwidth='1920' sizing-mode='range' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='22' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98098' id='25' param='vert' w='99166' x='417' y='951'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5945' id='26' w='99166' x='417' y='951'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92153' id='23' w='99166' x='417' y='6896' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='92628' id='3' name='Covid-19 India' w='29583' x='885' y='7372' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10464' id='8' name='Covid-19 India' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' w='13281' x='70781' y='11296' />
        <zone h='40904' id='9' name='Percentage distribution of Confirmed Cases (each state)' w='35885' x='32760' y='9988' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='27229' id='14' name='Percentage distribution of Confirmed Cases (each state)' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' w='12292' x='71094' y='26635' />
        <zone h='43401' id='16' name='Percentage comparison of deaths vs cured' w='46250' x='31406' y='53864' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21165' id='21' name='Percentage comparison of deaths vs cured' pane-specification-id='2' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' w='7292' x='77708' y='61118' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='28' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98098' id='27' param='vert' w='99166' x='417' y='951'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5945' id='26' w='99166' x='417' y='951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92628' id='3' is-fixed='true' name='Covid-19 India' w='29583' x='885' y='7372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10464' id='8' name='Covid-19 India' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' w='13281' x='70781' y='11296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40904' id='9' is-fixed='true' name='Percentage distribution of Confirmed Cases (each state)' w='35885' x='32760' y='9988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='27229' id='14' name='Percentage distribution of Confirmed Cases (each state)' pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' w='12292' x='71094' y='26635'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43401' id='16' is-fixed='true' name='Percentage comparison of deaths vs cured' w='46250' x='31406' y='53864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21165' id='21' name='Percentage comparison of deaths vs cured' pane-specification-id='2' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' w='7292' x='77708' y='61118'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{632D829D-4214-4CF3-9ADF-92C994CFF66E}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='900' maxwidth='1800' minheight='800' minwidth='1800' sizing-mode='range' />
      <datasources>
        <datasource caption='HospitalBedsIndia+' name='federated.1hdhuu31k2780r12k9ddt16qb79u' />
      </datasources>
      <datasource-dependencies datasource='federated.1hdhuu31k2780r12k9ddt16qb79u'>
        <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='84661' id='3' name='Population of chosen state' w='27833' x='444' y='14388' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10107' id='9' name='Population of chosen state' pane-specification-id='1' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' w='8333' x='81000' y='12128' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7253' id='8' mode='dropdown' name='Population of chosen state' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]' w='9333' x='80444' y='27229' />
        <zone h='78359' id='10' name='Availability of hospital beds in chosen states' w='31667' x='28667' y='17122' />
        <zone h='61474' id='11' name='statistics of hospital beds' w='30278' x='60722' y='36029' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98098' id='12' param='vert' w='99112' x='444' y='951'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7253' id='8' mode='dropdown' name='Population of chosen state' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]' w='9333' x='80444' y='27229'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84661' id='3' is-fixed='true' name='Population of chosen state' w='27833' x='444' y='14388'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10107' id='9' name='Population of chosen state' pane-specification-id='1' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' w='8333' x='81000' y='12128'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='78359' id='10' is-fixed='true' name='Availability of hospital beds in chosen states' w='31667' x='28667' y='17122'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61474' id='11' is-fixed='true' name='statistics of hospital beds' w='30278' x='60722' y='36029'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{96C22602-5A37-4BA1-9FDE-107B3E94C057}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Covid-19 India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A500A935-9C28-4DB4-B93B-C1F66A23A868}' />
    </window>
    <window class='worksheet' name='Percentage distribution of Confirmed Cases (each state)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:qk]</field>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD94C1C2-507D-4B36-98DD-F8B0D3D3E7E1}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20D0BE92-1CE2-441D-9ADF-F281874E9750}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:Date:ok]</field>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CDE34F9-0159-4D39-BA7E-6A90F6F3A39F}' />
    </window>
    <window class='worksheet' name='Percentage comparison of deaths vs cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB576801-8A5B-458D-8683-F81CA113A657}' />
    </window>
    <window class='dashboard' name='Covid-19 India Analysis'>
      <viewpoints>
        <viewpoint name='Covid-19 India'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage comparison of deaths vs cured'>
          <zoom type='entire-view' />
          <highlight field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Percentage distribution of Confirmed Cases (each state)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{3377402F-0C9E-4D5D-A4A5-D65FE59F6D7B}' />
    </window>
    <window class='worksheet' name='State wise no of confirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26F5B0D6-85E2-4F3D-B109-BF6B2474F07D}' />
    </window>
    <window class='worksheet' name='Statistics of a chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</field>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45CE01E5-85DF-4D3B-BAF9-E8B5DB5FF972}' />
    </window>
    <window class='worksheet' name='Comparison of deaths vs cured of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0DB2940-1E0F-4532-BB39-CCAF7E9BC7A2}' />
    </window>
    <window class='dashboard' name='Covid 19 India State wise Analysis'>
      <viewpoints>
        <viewpoint name='Comparison of deaths vs cured of chosen state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise no of confirmed cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statistics of a chosen state'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0gmvt7n0yah6ja10tguc81fkv1uv].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{79AD34D7-BA72-4BA5-B1DF-04AB1F92746A}' />
    </window>
    <window class='worksheet' name='Population of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</field>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2322A4FC-319C-4E6B-A96A-EEEDFF0C52DC}' />
    </window>
    <window class='worksheet' name='Availability of hospital beds in chosen states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</field>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{502B0983-478C-46E8-9DD2-FF774ACB485D}' />
    </window>
    <window class='worksheet' name='statistics of hospital beds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</field>
            <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[none:State / Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CB0C291-D938-437E-BAC0-5BF81A1B338A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Availability of hospital beds in chosen states'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population of chosen state'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hdhuu31k2780r12k9ddt16qb79u].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='statistics of hospital beds'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CC439065-FAD9-4863-BA57-379FC63280EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Availability of hospital beds in chosen states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison of deaths vs cured of chosen state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India State wise Analysis' width='192'>
      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
      i/8egP8fsrUHX+TNGf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid-19 India' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNy9V5MkWZYe9rkMrXVqVZWlq3q6R/TondldGg1mIGh84D/ZZ/4WkgBoBAiC
      AEEChO3u7Oyobd1dMrUWEZGhpYcrPkSdmzc83SMis7JGfWZpmRnh4vr1c849+gqtVstWFAXT
      otvtwjRN9r9t21d+AEAQBNi2DVmWoWkaO0eSJAwGA8Tjcei6PnJtQRBGfjtB1wYAURShaRpU
      VR35zrZtCILAfuhzTdPg9/tHxuh2Xf4zURRhmibq9TrC4TAsy0IkEoGu67AsC4IgoN/vIxgM
      Xhmboigol8tIJBLQNA2iKEKW5SvjpL91XYcoirBtG4FAAABQq9UQj8fR7XbRarWQSCQgSRJE
      UYRhGCPXsW0blmVBlmUIggBJkkae3Xl/N4iiyK7Jv0ev9/HHAsuyANxsrEK/37d9Pt9UB9u2
      jWazeYUBLMtiBAMAvV4PAEDXbTQaiMVisCwLzWYTgUAAuq4jGo2ywfME4fUw/Iuhe/X7fVfC
      FgSBERTBSQj8S3Z7VnomWZbR7/cBAK1WC6FQCIFAAJqmARgyNX8dIkhFUVAqlRAKhRijuh1n
      2zYGgwFarRby+Tx0XYcgCIwpaLx0n+vCNE30+32EQiE2327ghYaTof+YMe49TsK1n8xrAmVZ
      Rr1eR7PZhKqqUFUV/X4fjUYDiURieDNRRDKZRDgcxmAwgCRJUBQFlmWh2+2i3+9jMBiwhyLG
      cpNa9J3f70e/33eV6jxz2bYNVVUhiiIjZvqcv49T8lmWhcFgAFEUIYoiMpkMDMNAtVpFv993
      laqWZUGSJLTbbUQikRFp7fY8fr8f1WqVXZvmqlKpQFEUSJI0sppdF6qqot1us+tMg0mr8R8T
      3mWVkq97Av8SeHXj7OwM+XwepmkywvP5fBAEYWTFME0Ttm0jnU6j2WxC13WYpglZltny7XY/
      LzWFiNQJuo7zO0EQoKoqNE0Dr/rxqgQd55TUADAYDJjK0+12r9yPjut2u+j1eggGg5Bl+cp9
      6G/btlGv15FMJkeYw7ZtxONxtFot2LaNSCRy5RmnBamiznt74U+B6G8L114BSLfkX9bFxQUK
      hcKIbiyKIpOE/PFETKZpwu/3Ix6PI5vNQhAE9Ho9GIYBwzDQ6/WgKMrEl2EYhusxXioUSXtV
      Vdlqw3/vPI/+JukpiiIEQWA6OQD2Gf0oioJut4tUKgVZlqGq6pWxEMOrqopEIoFutzuialiW
      xWyBdyF+ei5FUZggmjQ3/LP/uTPDtVcAMmKB4Uvs9XqIxWIYDAZXjE+S7AS3STcMA6ZpIhaL
      oV6vM30+FAqhXC5DURREo9GRVYSHYRhws2F4YnZTPZzf85/TWFVVha7rkGUZjUYDkUjkyvWc
      +rEoiqhWq0in0yPMyd9fkiScn59DURQ2b6lU6sozkm3gxqzOe/L2Du9woOuQKkfz6wZeSF0X
      zmv+qTDOtRlAFEVIkgRN01CpVODz+RCLxUZ0V/JqGIYxwgBuoIkyTZNJfFJr0uk0TNNEs9lE
      KBRyfTk+nw+DwQCKoniqSW56NzGnFzGIogifz8eIX1VVNJtNDAYDJBIJ9Ho9aJqGXq8Hv9/P
      mJA3VPnVg1ZCy7JQqVRQKBRgmiZ6vR7C4TAMw3BV13gGdRp7tCIVi0X292AwwNzcHHq9Hkql
      Evs8nU6jXC4jFAqxd+WFmzCBc+X4U8G1GEAQBBiGgWazCVmWkc1mYVkWm1B6WYPBgLnkePAT
      67W88scYhsGkXyKRYKuFm4ri9F5Mo+86vUR0HZ/Ph0ajgVqtBmCo98/OzsLv90OSJJyeniIS
      icC2bcRiMTQaDWiaxrxMpEoIgsBWSSLS+fl5NiaS1Lquu47RzSPDf9dqtdDr9ZBOpyGKInRd
      x+bmJiRJgs/nw+zsLIrFIjRNw4sXLzA3N3fFxnFbGfnfN1WD3sUz8/vEtdygwFByVqvVK+5I
      p0dFkiQYhjGiIoxzp+m6znzcTglEhqIgCEgkEleWavLHq6o6tafEMAzXVUNVVZRKJaRSKaiq
      ik6ng1AoxIx3ul+320UwGGTPpes6fD4fRFHE/v4+5ubmoOs6yuUyYrEYQqEQAKBUKsEwDGYz
      ke3j9/uvjFFRFFxcXLCVkKS5JEnQdR2tVgvxeJytHPSdZVlsRT06OoJlWcjn8/D5fIzxeEKn
      v/kVyI3w3QQP/47chMk4IfTHwBzXVoEAMCkHjBI++a6JoXRdh6qqbCWgwBcZZc5r0kt2W+pT
      qRREUUS5XEY6nWbEQ/eWZRmmaU7tsx4n2WRZZkTGr3Burlb6IYYXBAGZTAZnZ2eQZZkxAunw
      6XQavV6PzcW4MfPxFbrHxcUFe16yG/i4QavVQiQSYYxYq1axtraGL774AvFYDDaAQqHAVjCe
      QMcRuPP5nQ4DL0eE1/l/aOJnNMavAG7+bNM0mSTXdR2KoqDT6bCXQ79pOVcUhXlFgGHwybIs
      9Pt9xONx9jmpSeQhISnIS3c3A1JVVRSLRWSzWSbJ+HtNuwp4ETYxMknsfr+PQCBwhUCI0AhO
      4qHzeH2bFxZkK2iahkAg4OnK7ff78Pl8UBQFxWIRkUiEectkWWaBMjKWX758iUQiAVVRMD8/
      PxKAI3z9zTdIJBKYnZ0dGZtzLqbBdVQk/j3+oT1MjM46nY7NTxIZr6RvO41IYgbe00OuP2D8
      0kkvkx/EYDBgxOWVkuEkDtseRqRJcpLe7vf7WYDtJhBFEY1GA+l0GpqmQRAET88JETivR5Mu
      T8eTwCCmAoZRcj4ia1mWq71Ez0UpFaIosoDW7OwsEzy9Xg9v3rwZqklv31kul0M0GvV8zlqt
      Bp/fj5OTEywtLV070jvOLnF61f7Qkn4cLMuC3Gw2R9xlTt2bJBYAJm263S58Ph/z5U96YCJ0
      Z+CJVCHnpDnh/J4McLoXeUKcOTnXBenYvDTk826I2SlGwT8HEbmqquj1elfsBNu+jETzDE0r
      q5MBeEEiSRJL+ZiZmWHjsSwLW1tbePrkyURvGw+KXyzMz2N7awvr9+6xMU47T27He60iXkzw
      +zaUnfczDGNoAzgDIARectGJlFMCwDW66DROCbIsw7IsV2kzaeKdE26aJlO5KPHsXSeTNyB5
      Ah0MBvD5fCzeQIRMf/NjJEag70Kh0BV1cDAYsDwi8hIJgsAi03xeEaVTkL6vqiqzM0zTxPb2
      Nh7cv38t4ufh8/lw9+5d7Gxvw+f3Y2FhwTPeMi2mYSKnKvQ+QWkvpHLTPUlrEM7Pz203F6JT
      VyMXKBGKm8HkXEF4YicJxhOX11LqBS9PgyzLqFQqyGaz6HQ611KB+POBoZFKBiu5YcnDxI+D
      vqO563a7kCRpJOpLx1EcABgKFXIUkN5Oc6Vp2kg8od1uwzRNJBKJEXVUURR8/vnnePToEXwu
      Ov5NcHFxgVK5jHv37t1oFb3uuwTeX77RYDBAp9NhRE7z70YXMrkDnYPhCZWWXD5QRcRNq4CT
      sJ14l4ccN7k805InZhwD0DhI8tZqNXS7XczPz8MwjJGIKz3rYDBgBidwuVqYpski4xSoc5Nu
      TlcwT+R0DX61JY9Oo9HA4uIiyzql7wzDQDQSuTXiB4aMH4/Hsb21hTt3747NGqXnsO1hjhHZ
      jWTvTIP3aQR3u12m5k2CzHsQSFenF0afOz0JNPhAIMB0XifhOEFZmG5eCS9cxzNBqdZuhhg/
      LkoNJkZJJpMIhUIsKc95f0poo/NplSM3Kal2vPrnVI28XjRF1ClNIRwOs+90XUc+n8f5+Tlz
      d/IrdavVwvb2NiRZRjgUQiaTmTyhEyBJEizu+dxUY1Lp9vb20Gw0mIeq3mhgaWkJ8Xj8ncfx
      LnA6WsbBtu2hCkRLNRm5wKW+72bk8nrttCCPEakO9Nm0y6ZTsjrHRDo072J0gpfm5DFyGude
      99Y0jRnZdB3gMjvU6bYFLotwvGCaJjRNQzgcZrlGZCQbhsHSpEkFcq6+vV4Psixjb28Pa6ur
      VwJ7N5Gwg8EAh4eH0HUdsXgchUKBrU6GYWBjYwOiIGB5eZkJBmAogN5sbODhw4fs2fi5GAdd
      15ljhbxd04yz0+mwPCh6j6qqjp1zAhNYxAD8CzQMA7Zts3RmN1x3cvkKKj7ucB29ka4hCFdT
      oC3LwtnZGXK5HJtIimMQJElCrVZjgTR6bgrYea0avG7Og7xEbpFcYpJxzMXHCviXSIYycOmW
      pliBm4vZsizs7e4iEAggGAwim81escdugi+/+gpLS0sIBoMol8s4PT3FB8+eeT5Tq9XC4dER
      QqEQer0elpeXJwoXqrhLp9PMYB0nwWmVl2WZzREAz3fkhFOrEIrFoq1pGlvySHry+v5tYTAY
      wDTNEcbiI8qTBu51jCRJaDabSKVSqFQq7FhVVREOh9l5uq6j2Wwik8mMqGy0AgJXJ58MVq9A
      VbfbZasmT3RExE6vF71kMtAoCc7n87HIM2+wUeoJBf6c74R/VgD45ptv8MGzZ7fCAEdHR2i1
      WggGg/D7/SgUClN57DY2N5FJp7Gzs4PVtTXEYjEW/fb7/cz+Mk2TpXMQBoMBK96h1BheWKmq
      OkL414WTjmTg0jAjNYW8PLdJ/N1uF36/f2R5cxp+43T+cRNPk2SaJqLRKDPQBoMBLi4uWJ5R
      JBJBJpNxrUX2+XzQNG0k4Y6WfSJKInRy55JN45ZVSqsDgU8Q5BlK13WmWvHXIXWRdOxJ74Ls
      EUEQWP7Su4IS9/hnmgTbtrF+9y729/exfu8egsEg6vU685Dpus48NOTh4qGqKpLJJHsmYFgx
      d5OyTDdX65WYEi0nRPi8DXAbIMIMBAIwTfOKsczbA15BtHHg3bLEwKT2kKsxl8uh3W575tXT
      fUn6U6o02TqyLDMPEalMpG96GdzkGSP3JRGxZVmo1+tsLIqijKiFFB8wDIPZFl4CySnNLMvC
      o0ePUKlU8PLFC2RzWRiDAdburl8Z368+/RQ//PZHqJaLEP1RhFTgzYsvEF/+EELnArmZON68
      uMDa3QxeP9/A3MoKsunpPCu2baPT6WBhcRGWZSEWi418z9tS4zBNs4ZpNAfAO7NWJv1zmtz9
      64IIkvz/ZNgRBoMBc5/x57hxrDOCSiAPCmVs8tB1HaFQCP1+/0qAi7++80XwPnqaE5KuRPx0
      rhfIO8YbivwyTisSrU69Xo8JCjIEBUHA+fk5qx1wWy2d82TbNlKpFOqnR0jIAs5rLdRqtSuS
      dmjnWfjyk99ip2bh6VIGsmyg16rgk3/4r8ivruHs5T7UxM9RubhAq9lB4i9/jGn6h5DQmHTM
      beC6gbcrDKAoykh7kdsEBaVIqjkNRfLdA95BEX7AbkwgCALLr3Er9CCm4Fc5Os/LXUuGp3NO
      eLVmUlEJSXueWInYSaWiTE5JkuD3+2EYBjPIVVXF+fk55ufnR3Rip3Dg/5dlGYf7e+g3G1id
      n4MoCFhZmMfx6THevHyBew8fMUY43nmDb4JBVPsWon4f9EEftVoL3cEhkvN3AL2GlbU1VEtl
      ZPKz8MHANB5+QRBQLBaRzmSmjgnw80vXuM7x18VIkLdardq03PIBFyeIeMmIm+YmlEbgBB9w
      8srf4V2K9D2fQAYMidXv9+P4+Bj5fH5s2SCAK2WbROBkZJErlep1x00wHU/zQinJ9J1lWfD7
      /ej1emyFpeQ5qnmmuaEVhcYRCARQKpUwMzPDVkkyCL2WckmSUCqV0K+WsThz1Vjd2j+EKUoQ
      FRUP3roq3wd2dnYgyTKWlpaunVbhfK5JduhNos/8eYIgQNZ1nbnxJmUmXoejx/nAieFINfHS
      o2mwfACK/60oCnZ3d7G4uDiR+IFLHZ/O7/f7I313yEAdF0jjpQcfbyD1zumhcZsDSZJYRijZ
      LKZpQlXVERuGXpRlWVcMYecYT09OIGtdzOWyrmO/u7wI27axtbc/koJxW2i1Wjg7P4d8Q+IH
      3LNJJx3vhmk8VQQ5EAggGo0yHRS4lPIU5TRNE91udyQIQzfiYwgUZHISBw8+89Hv9zPPC13b
      2emN/9spEXg1xBmEcpsg5/+SJOHk5ASFQgEHBwdYWVnBYDBgOjOfokAuSmKYcrnMVh2q96U+
      QG7w+XzMEKex8JKd5oscEcQMpCZ6ET8jGstCIhYdeT9uzz+Ty2F7axNrd+7eKhNIkoRgMIjZ
      2dl3TqjzWuUmOQHcmIc/hqcf9rtcLttuLiY+c85J9F6gnkDjrHc+Rdg5UCImkub8RJDvl3+I
      SqWCXC7HDGG3kj4vvZJWqBcvXrCidD72YRgG4vE4zs7OWFtEn8+HXq+HRCKBSqWCZDKJ09NT
      1uYxl8sxYtV1nak8wCXjk/uUouxuvZNUVWWdJTqdztQBnuPN11go5Ec+d5OSfU3DN5s7+N6P
      fnxrxuj+/j4Sb5ueTYKXQ4PHJPWGXN2TpL1XowG6hycD3BS9Xm9soMLre3oQZ+IZ5aPQKkEe
      hlqthlgsNnLcuEl1MjHfga7f7zOir1aryOVy7BjDMJhPnSbOMIyRcyKRCEzTRDabHcnVp7pc
      em5SkQRBYOpfrVZDMBhktgd5y2RZRjAYvGJH0bho1SBCsCwLu6+e4+7iwshzexG4Nhjg+fYe
      wrEYHj567Dlv43ByeopOpwMAUBUFC4uLU6kfsViMxQPG4aY6/jTXIOEoT3ODarWKZDLpqovT
      TQjTMNO4AIVTDybQck0GdDqdRr1eZ5VPbo1dvUD3pfJN0tPb7TYKhcKIFBvnHia7iNQkvlCG
      UhsowEgGLKVDUxyh3+8zY5dfJSgg9+rFK9x7+hjK22uSx6vb7aLT6SAej182EVO97ZchTBwc
      nGNxcRbn52fwWwbSoSC2tzaxunYHgiCgW95FO7iCrCOO1m7WIQUiCCgc05km5ufnWcnoNDai
      bdtoNBpXPr+Ofen1fF4eRDc6pb9l+oc/2bm81Go1mKaJSqWCfD6PUqmEbDaLs7MziKKI9fWr
      gRYvBAIBJg15qUgD9fL5M6udC9SRW5Mmny9o8dIN6W86nj/ObfmmCjgvtY1XcZyqiiRJLGGL
      7kvGsqZp7FlPTk6QzWYBXBb7UL/TarmESukIv/nFr3D30VMc7u5hYFoIJzOIoYWTkxpi2TCi
      sQwuWgbalRK+9fgJvvj01zhp2SgERVRqLaw+uoe93QMoShQLCzP49S//Cx5+959BaxTx7/7D
      3+Gv//nPcFQc4MOlAH7zxQkWC2nUDl+i1rYhh8J4sDYHWZXxeuMUf/XXP0dIFZHNZrF/cICH
      Dx+y1XCSe5jm7V0xznNI309zH9HtQOrGxqPf72N2dpZFLallOC/xnW1QxoGklnPCeDelF4iY
      qEcPJUiRD593dzpdh+SCJPerZVkjPT6d8PKKESjG4aanq6rKOkmTSsSvZKZpIhKJjLhcKVUb
      GL4HQxRxsLGJRFTFWbWDe4+/hZnCLHKpCIKJHNZz87j37D4s3cLAMnFWugBgoFxp4ez8FGog
      iu8+WMRJqYT7j57ALw/fz927D1C9OMfBcREp1cTuYQWyVkOl2ceH3/0RJFtDbm4FC/k53Fma
      w0DTMDAsPPvwuwjIw3nZ3NpCNpvFYDBgKuE0NoDXO5303oHxhM0Lv2mZjL1ZvlyRmjwR4vE4
      FEVh0lsQBJZzQ+F66m05jcFGKdZepZhEuF7f0wOm02mcnJwgHo+j0+mwSCoREF+FRdclyU/F
      +LwHxgny4TvLH6mFC98vdBJozHQdPu0kk8ng9PQU4XB4pFimfLKPlfWHyIZFbO4eY2XtDnyq
      imwqClESIcCGuGjDFwsgFV1C7T//B3zr6TMAMlaWFnDnSQqZSAh+WcB3Cgo23rzB2t1lAMDd
      +08gmAbavS6iqRzmZ7L41WdfY2bxDoIhILWyCgE2TMOCpMiAbUEQRcjKpf0Wi0aZGkm5S9cN
      fhG81Be3eZyE66wwQrFYHDGCp5Xg5PGh39dNWOIlntMopu94onFKB1EUR0L8/MRTZNstmEbe
      F+f9yANFLVx8Ph/L0OQlNKWK8/NAbkse/HjpeiQ8qNMd3btUKrHu0M6+nmSs8xm0bpJSEASU
      SyUETA0RLhFuGmIQBAFHZ+fQDQNHpQv87C//auI5hFevX8O2bSwsLLiqideB873z43P7/DYg
      u3HepGWIWgCST/y2XGn8GIDxNaO8DcAbzM6AHblIAXgWWwjCZUsWy7KYL5+YgWcYZ000703i
      x0vCgO9YR9LdsiwUi0XWgIviCXyhPx3HNwybNGeZbBabz7/GvCgiOGXKsGEYeLW9i5X7D+D3
      +5Gancfu7i7m5+dZgY0zX4vH/Xv3UCwWp7qXsyjd7RnG+f9vm/iBtwwwLQETMVEnhncB3ZNX
      JwjjgjnAZaoBX5nGS1tqqEuFMUTA4yQI3/6EjtV1nem0FJTiHQQ0Tj4Nglqf8IzIG/W2Pewn
      qmkaq/QigxgAq2qjIBkxj5PB3GDbNtYePkbx/BwnRyeYz6YReJtjxLe+IXyzuY1wNIZHH37E
      BMOw/6mMV69esfQYTdPw9OlTzwyBWCyGYqnE4iWT4BWbGefBelfi92IioVQq2V4ljk6rng9I
      3SZIik4bmSSCIL2T3HBOT48zGOZ0g/H/U5yBtxuoKZYbIZPxy9sIVARDKRakGjprhuv1OrLZ
      7Ajh81KWmI88ZM6xTlI16TkO9/cw6HVRLZfx0ePL/B+61vbBIeburCPE1TzzaLfbLMt2Y3ML
      y8vLePnqJZ4+ecra4hMOj46QyWTGvkPnO3LTPrzsvvcF5gVy3pR/CfTzPogfAPP9TwuaOJ/P
      xyqy3JbNK2FvD1WKCtNJnSM1R1EUlhlKQoKivLIsQ1GUkTpc2q6JAlRu80W1Bc4XTVm5zD/9
      1v3q9SzjQGrL7PwC7j58jHAkciVK/vYvSGOYKRwOM9dzPBbD8dERTMPAq9evsbW9zRwlJycn
      rKZ3EpyRWKfbelqnwm3B0793HdXoNkDVQtOqVryUV1WVGeTj1APn+bwd4baJHen6FHyja9AL
      cyseIumraZprt7dOp8Nqknm4uYOdY79JC0PLspCamcVBtYF+r4dkwIdkPIbDkzOUanXMO9rZ
      eM3f7OwMgGH/oHa3h1wuh6PjY/R7PSwuLSH7Nno+Dk41ZNyK/PuCJwM4g0TvG9QIylk95AU+
      FsBnlY47HrgsNQTA8pZIhXFKJ7In+LpiYjSS8vy1gcuO2PS5U9JTANDZj5V3IfP2gJdHZFoY
      hoFUKo1MJgtZlrGx8Qa7L14jkUjg7v371/bcpNNpXGxsIBQKYW5ubmTzj0mYROR/CAbwVIHI
      gLxNjJsAqhy7LrykPkk/CtIQgZNaR7k3lADntINI7aFtkXijnRjPbbkOhUIsrcHLo0HnkwrB
      e9P4gJ6zzQk903QTo6PV0zDotmEYGo7PStjd2YHe7eEH3/0Oqo0Gq70FAK3fhWmNemLarTYA
      4Ox4H6+39mC9HcvK8jK2NjeHNCIAnc7VQCKpb/z1ruWfd8zt+9JIRlIh+LYjvD5Kx9BAbgIy
      Guklkm5JagLfCmRajBsL6aR8BiYwmlPkpW5R6jOv0zpVEi9fPN3Dti83piPGIyIgu4VsGLe9
      Enjj9zoGMEO/ii92u1i1itjumkgHwmjXLxAIhvHlyy2s5JL4l//qf8P/8C/+GZ6/fINwUESt
      LeDh40c43vwG8Zk1nG3v4Ps//Rgvdw+wngnjs1cGAraBTCqMTz//GrlcGt989QV6UhzzMQGG
      Lwmf0UDbDqJV2oWgxPCtj74FWbicNy8Xp9tnbgwzzlN0E1yZTd7DAmDEOOWt9EmDcIalKQ3A
      5/MhEAgwD0ev12MBopvA7Tw+b58Ihgx53svjRUxE/G4ETi5FWlk6nQ7zlvGrhKZpODw8xMnJ
      CTY2NgBcpjnn83nmLuVbqhBjOT1CN8XWiy/xf/3XXyKn9CCIAoK5BTTrLdhaF81WE0Grhf/5
      3/zfePLhR/BJIh7cW8He4T6q9RY++/RzwB7ev10rY+u0iYhVw8CfRLNawfnuEb744jlWnnyE
      SMDAb/7xC7x+s4GLahWDfh+SL4i5tIpSUx87xkm+/0nH3RS0jRSzASjszxuHtCo4N2qetBrQ
      97zUc5PukiSxzylH57qrgJu7kzImvTBO+ntdExg+L/XyIb2X5oqYmLZY8vl8I/uBUbAolUqN
      7JQDgHWIoNWJeid5FfFPBUnFxz/4EQZHKQTCIQhyAJI/DF8mDb9PRbtZQixdgNW38E+/+x0W
      ZvMIBQIIByRULRmpZBCx2DAfbOnOAzy9fx+N0iEGoRTON/cxt5CDLFl4/vnniGcKWFzOI5yf
      QwgdnDfamCtkEAzKMOTrCTZatXmh+D5sAwqgss5wAEa8Gs523TQQJ0F4vRDLsq5065qkx5F6
      QPlF06Ddbo9EejVNQzKZHEvg9GxeK4BbuoQb+GAc2RsHBwdYW1u7ktFK88h7f8igpigw5VeR
      IOBXYuBSL3Z6ndxiBTQfrVYL1bMTLDl6/BDKlQpE/3BFnpTIxt93d28PhZlZ7O7u4v79+xM9
      OtNKb3ItU8OAm1zjOhihAF5l8ZI+/CrhBvKeUBDpOhAEgbUxmeQtoKqqQCCAdDqNTCaDZDKJ
      XC6HarU6tkP0OHcfH8GdBFEUUalUcHZ2xtKY4/H4iMuUQB0f+DEAl6WEwGUS4rj6g+uqBqfH
      x57EDwCpRALnJyfY29rCycnJ2OftdLvY3NxCpVqFz+fDp59+ikIui92dnZEIuZvhPi3hGoaB
      brfLbFA69ya6vyAIY71ciqIMGYB3IdIDOHNsnBemAdFgiSCpCISvfiJMq8cFAgHmSXEDqQuk
      0/NJeXT+TetSJ6U/EyRJQrlcRiaTQS6XY16bQqEwdjNqwNsYJOnHr168Z2jaGAd/rq7r2NjZ
      8RyLKIp4ePcOHt1bR6VUcj3GeBv8uri4wNLSIvr9PvSBDlkapsQEAwGUy6URm8s5jklwqjs8
      7VAPJS+B6nV9fpXnkyP552I7xPAvnfdgkM/aTaJSQyqnD5739LgFP6aZEJ/Ph2z+byoAACAA
      SURBVH6/fyXZjtKub+qideuvyWOaYJxlWbi4uECEi7Dy7VHGwY34+bJLJ5zqzrSg3CbL0DG7
      4L0C8IiGw9jf38f8/PzI+37+4gWePnnC5nymUIAgCFhaWgQARCIR7O7u4eLiArZl48HDhyOV
      coRxQmHcO6G9qb1WZlIddV1Hu91mz+/z+dBqtVjSobPS0LbtYVsUN2lJg6duxeSxcDLCOIJ2
      vmy3QvtxL9VZNcb34vQC+de9VjBqc+4FfiskNwjCMJcnn8+z1Ginc+B94LpeMkVR8PyrL/Hk
      3vrU584W8vjPf/t3aNbrWH/wAL637lxJlK5cw/neV1aW2Tva2tyAPxBkm/nR+Pn37tbRYxzG
      qaXkSuavQ/s30L28KtVE3tD1eoF8wTZfKMP39Lmuf3daPTsQCKDZbLJGUuOIXxRFXFxcIJlM
      3lgFmkTEfBE6cPWZnO7fSWrf+wjuKIqCN69eYW1h/lrXFwBk0mlkE3FsvnnDPpcV9zl3Mr9t
      D1O+l5eWUK/VRqLlBGf/fi/V7joGL+0vwBfZ67o+VRM3mXRnt/YRzgGRvg1cekCuIwFv6tYi
      m2LStamFiFdXt2nuOw3BOKWf09C7jq4+Tf7SdaKgkiRha2MD6Uho6poAgiiKSCcTaHc68Msy
      Xr96BdXnQ6c9uXsD/SatYXVlGC22bBvLy8tXqg35NHWndH4f3h4viMBoGjLvBXJzZfGbU3u9
      8HHeovcV0iZ7hc/bccKt+swJYmovuHk43D7nYwm8lHNem9Q1wHturiXFBQFat4P4lDlVPLZ2
      dyFLIjKpFGRZQCHix+uvXsJslHF0sA9N915VK6UTDExg0Cqh1B7aNHfWVrF+Zw3HR0c4OzuD
      z+fD0dEBTk+KME1zuDFfqeSqVv++cKUizEkAPJHT3yT93RLQ3GIFbte6TYjicJ/gmZkZT9WH
      yhLf9d5EpE41xwkSFpMYnjJZ6Tg3H/+046IIdeXiAvba6tTnVut1vHzzBrFoFHfe6vLP37yE
      FlRhlA7x66+PEHn1GoXHP8ST+QheHpTxcCGBwwsDcxk/Xh+UsVYI47zcRFzt4x83X2J9ZQ6q
      VkVtoELqlvFq+xA/++u/wFdfPkc0uYCFxVmEQiEcHx8zmiPhSs9D8/g+4arcubku6XPaFdBJ
      TPQ3EYdb+dtNfLnAeANIFMWRFuJO8JvY3UZyH/X7oUq2SeDVJS9h4Ub8bsd7QRAE1CoXOHrx
      NQJaC5IhYPP1KwiSBIgSBHEoYedmZxBwUSVPTk/xvY8+HBnr+dkZVEnDyvIymqKNH/7gR1AL
      d3Dw8rc4eLOHfOYpnnzwEV588rfYf7OPbOwudk8r+KsPZ/Hso++he/4CJ8dlfLO7j8frD/Df
      /eXP8E+vXuDZxz/C4ZsdFugqFAool8tsU0CnY+F94woDOHNk6MVQCxPainSSO9OpF3oZOtfx
      Ebuh2+2i2WwiEAggFotdyfWhhLPrEJMTJKFarRY0TUM8Hh9h8Gmfg78+7yqe9IyTIIoizt+8
      wD2/BfhDWAQAvQ5Ds/B5qYVv/+inEEUBv/vsc6wuLw8ZVxiqX5FweFj843AuJFQRmhnAo/k0
      Nk8PkZxfxtbOHkQAq+vrWJhbRlARUcgVIPrTWFqZw711Ba1WG/moAlNZxtn+IT766CPcX1uF
      Kov4/g9+jJfPX2FuaXkk1SYejw9tl60t3Lt370qby/cJ4ezs7AqrOSUluT8pS5IYgIJefFYn
      MGpHsBt5MME0UnlcjhBFY6llC7VGyWQyI23Y3dIyaKzAZW5I422asCBctkq07WHxSyQSYTW7
      birQtD5v4LJVO59WfVMmkGUZz//Tv8Va4moqw2apisIHHyOTTqHf1/DJF1/i0YN7UN8GiXq9
      PlLJqzu/fP3bf8SDQgoAUGy0cdIzkUylENdbOG0P8PTHPx87XkEQsLm9jdXVtSuduwVBGNmT
      guaB3uVgMMDs7OxUHb/fFbKTEOhv/uGoPSBJQspTp+gaqQS8b99pKDsJ5br6rRcsy0I6ncbZ
      2Rmy2WHRx2AwwNHREQCwvYwty0K73b6yxFIqQrFYZJmq1WqVJcxls1kWlKNAyjjPl1Pd82IE
      YtRJhTxe88HP5cHONuYj7gIioCosgc/v9+HO6gqS3KZ0bp4i27Yh2pfCKxcLI6RqkO0u/MEA
      In4fnv/q7xEuzGNl7Y7rfSuVChKJ5EhX7ZHrO1K+yRuZSqWgKAoODg4wNzc30q7mfahFbKf4
      cQwAgEVlg8EgLMtCr9djx/n9fnS7XdYNedJA3e41SZqMUzNM02SbShcKhaE7L51myXHtdhs+
      nw+hUOiKd4o6w2WzWfYZvQR6MXzreK+xuX0+7vmpfpjvej0N+LHTnLR3XiMbdo9eh1QFbz75
      DQTYmLn/GKIoQRsMxu4yLwgCRGX0+3DgcvWURBFpVUBzzIYq/b6GxNsNvp2gCji3eaOOefl8
      HvV6HcFgEKVSiW2eNynSfl3IgjBM5/Xy/gCXL4fPe+cJ0rZtlr/D77frfFH8ta9DNJQuPK7o
      mlYkfnKpaRW/DafbvZ3qlSAILK/J+QK9vFzTPI9zDvhA0bQxCn6FEUURmy++wXzAO/EvGfQj
      GQQs28bF7itoloWjuTWsrayMvdckQktGQqhdnOHFlxruP3k24soUBAEX1Qoyb3OkgMugKQkg
      t9QaXmuguanX65iZmWHBUFrNbwsidSnw8lB4ufhIx3fL+SA4/eBefvFJRTZ8Xxsv2PawVWK5
      XH5nb0+r1Ror9b3gJFA3lyb9kE0yaeVz/tDntm3j9ddfwVc8gCJNfl5REJCNBFGIhtA42ptI
      RGo4ykogva53JxPHLHr46ne/Zjk4wLCb+Nzc/BWBSk1/3WqdnfRGNRG090I0GkW73XZtxPYu
      DgSZDDy3yO44OCUf5bWTFLYsi+3S6Lyem8E3LkZAW4lOytLk9zp718ZdXiBC5ANgzrHzz+DF
      jKQHj1sN3eZCkiTsb22gsfkCK9EApOD1dnkRBAGK5WDs9jn+17/7BkszBfzgw0d4/slvcfrq
      Mwj3ngCCjLV8EpVGE8lYFM4Rhfw+PPYDr373D5B8fvQsAWIgjIdPn7F6EjJmKZer3W575mPx
      c0H12yQkfT4fSqUS0un0FXqdZHN5zsf5+blNujK/PdG4l+rl7aBc7lgsNmLpuzGA10N7eUOm
      LVKhfKBIJOJZVTUNbNvG9vY2fD4fFhcX2RgGgwGi0Sjq9TproUgbU497Lv6ZSDi4zQ1/vNs8
      lItF2K8/Rcx/8+2Nis0OAuvPkM1mhh/U9/CLYghzgz2ctC389t/+S3y8lEUnNY9GX0ckHEUk
      qOD7j+5PvLZhmmh0NTR1Ex1I8PsDuPPsI7YVLD2b8xl5eqOGBORxc6qJZBvQllTEJDdhANmN
      wJ2Dc8LJDHRjMpLp+3HpEAQn9/JVVlQUIQiT950lkFeoXq+j2WxCFEXWeJZSvKdhClLLut0u
      qtUqyuUyEokES7LSdR2VSgWhUAiHh4eYnZ1lO9fE43G0221Eo1Ekk8mRwCDfb5Q2ynabGy+X
      ceVoH8vvQPwAkIuGsLfxHJL0FKnU0NXZaTdx1hmgVSsi9/ADNBvHaFsyFhbnoRhdNKfcHVSW
      JKQiQaTe/m/ZNrZ/83eQsvOYXViALCsjmwDSs9q2jVqtxpoZ2LaNSCSCVquFZDKJ2tvkumQy
      iUwmg8FgwHbm4ZM5edvFzT5zfibzH07ytvBwM3Cd5zkJjX/hPJPQNZy2ALlWJ+n/TliWhWg0
      ys47PT1FMBhENptlu1OO2xKWUKvVMD8/z8bdaDSwv7+Pn/zkJ9jf30c4HEa73UYqlUI+n8fh
      4SHLWp2fn8fx8THC4TDLpiVhQO5j6kjHu4/HCZ1mo4Fg6wIIvLt6txTxYf/55+ivPcBsfgbz
      vi0s3vs2wiqwsXOIVCoORQ3g8JvPsDw7B9O6mQtSFASspmPodC+w/ekxHnz/p7Ad5aI8IwSD
      QSZsKpUK0uk0jo+PoaoqC0KSSkXCaDAYoNVqIZVKsZXYyWQEp/Blaza1AfRaCch4dfpzncfx
      oFqCfr/PNsTguyk74wL89UlNcB57HZDffmZmBoIw3MOANqWeZCOIoog7d+5gZmaGMWEqlcLH
      H3+MRqOBVCrFPE+pVArn5+cQhGGj2EQiAUEQkEwmWX8lN4GhqurIXgbOnHYe/X4fp7/7BXK3
      QPzAcM4XYkGc7u+i0dWgD3Qogo2vPv0MQVVGLpNFLByEqCgI+v2IBN+tLWbIr+JuKoIvf/l3
      rkVHgjDcXCMQCGBxcRGCMGxAUK1WMTs7C1VVkclkQF5L2n8tm80ilUphdXWVbdJRr9eZeknd
      SNxULUmShpvk0SD4C9NB00wk/5vfANoNzoJ0r9WDLwznV4SbotPpIBgMwufzMaP6XTZydhrB
      vBuZwvzTGOK0W+XB65donOxj6aPvI5ZIMoFg28M+ny+++AzLWgXqNVfDsfc2DOyKUXQvikhI
      FkqahWeZCE58CTx8/BgDXceL3/0Kj+dzt3ZPADiqtSBl55AqzEFVFAji5WYoNB+829QZBCMm
      4FvK0Mp6cnLCGgz0ej1EIhH0ej0kk8mRVbjVag3/brfbNuXPdzodRqBebk26If+Z08AbtxEz
      lep1u13WhcBt9XCmLrwrKOB10y18gFFXHc2BkymoVeC0kCQJG199jnyrCL8iY9fy4c53foDd
      jdfQSyeQ9AFE20I2oMDvUZhyU5iWhY1qG6Jt415mmD6tGSZe6CqioSD6zRrWUhGE/bf3Hgh9
      3UCl3YMtilBnljG7uMyI0mv+SG0ELmt8SW0HLm1OWZaZV5JW+/Pzc8ZIFHEul8sQ+v2+TYRG
      Uc9GozGyqzrBSw3hJTN5RHgCcYKWfb4Ni9N1SIGvd910mb9mtVodCYpdFzzxO6US3858GvBq
      38v/599hJT50C/Z0A6VOH7PRIORbyF69Lvq6gZelOp4Wktipt/FgeWHySe+IrjbAQaOL2NJd
      zC8sjqSR810h+NoJgpvnjXeN8huQO23darU6mg0qSRIrzq7X6yxQw3MZcKmf8ysCLVVBrte8
      F8PQ8V6g4Jyqqsx1dhvgPU43OXfc8/CNsiaBJ/4Xv/4HLMcufeIBRcZi/Oar1LvCr8j4cDYN
      ABBMEwPDgMp54IxBH4aowtI0+EOBq60FOdimgTd7+0im88i5PJM+0ABJRdCn4n5WxeHpHjYv
      isMGW8EgTne3kMgVYFg2Li4ukC8UMDs7O5Lk6Gbk8nq+W4dD4HKfuitrKu+lcNbhko/Wsix2
      gUl6Oc91pDcrijKxCxzpg7cFMqip7851ul97qTwE6qpxXeLf+vS3WLQ7t1Kn8D6wlIji1fY+
      Hq4tQ5GHkrRZ3kfJv4Lu7g7qvVNYsRUU917hO9/5Hvq1MkKpAkLiAB1dwnxcQrFnobi5ASzP
      oa3Z0Np1KJEUEqqJT168xqMnH+Ls6BD37qzgbH8XYcnCN199gfzsEr63mEL34gCvKx18/2d/
      hXang9evXkJRh7EZZ2IizT8ZvnzNuhP0uevMU3+bTCbDiLXX67FU6GmNZEVREIlEEIvFEAqF
      RnR6yrAErnIxJUTdZs4HbUwNgO1vfF04GYH/fFrVBxgu21tff4G8VvuDqDnTQpUlBCQR7f6l
      IBLwNmYjADP5DJ7eXcPK0gpWs1FUWj189nIDb/YOMZcfRgIOjw7hC0WxuX+ImUwclWYHn77c
      wN5ZFc/uLOKrl6/Q7HXwZnsH7YGBnqbj20+eINC7gAAg5FOREE1UazWEQyHcX1+HoQ9Yb1X+
      h0CbjTgDbvxPr9fDm5cv3BmAJFQgEEAikUA+n2f7P/FuPa+X7vf7EYlEEAwGWa2Az+dj24DS
      9WmndGcrcWp0dZuwLIvt2Ut7BN8U46K3k0DP3j89uDbxD/od/PKrF6h0Lgmy02xB85AThjFA
      T5u8cbUXbNtGRxvgs81dHF9UsXl8DjuYwvHGV+irKtKxFDZ2dxFVBWwfnUOHgFQsgvnZGaiS
      CFFS8N1nT/HxwzuYLRTgE23oto10LAqfaOL1URnr8wUIkoqZXA4ByYYpqgj7ZETDl32SFjMJ
      nB8dsP/TyRRevnjBHCWKosDv9zPNhW804Eb8gjDMYM7n86NG8DhomsaaUgG4YgQCl1t5BgIB
      dLtd2LZ9xeui6zpardbIZxQdpQouQRBurYaXwOefU+uU64A3fJ1qELmOp1lVSFp98x//d9xJ
      RScez6N8foCylEH1dA+ruQT2K13cy8chBsN4tbWNpflFnJweIp1K4//77ef4yYcPsHtYw53V
      Rdj9Gjq2H+mggKNiFQ/v30dUHe+tumh1sHVRx0oqBkWSsFuqQhRsRN86EmazaYQD19/T4SY4
      rTZwZqn4+Ic/AvC2DuLwEJ1uD4FgEN1OG4XCDBLJJDqdzlTbbrVarekZAMAV46LX67FiGNo1
      njI3vRpfUcjb6/rUCEsUxanzf7xA3N5ut1mQxDAMJBKJqVMr+LE5mYDgDLZMGpMkSahelHH+
      6muo3SaCioxEYHJ6Q/l0F//ms11898ljBAZ1vNnbx0JhHpFcDmcnhxjoMkJ+IJedQfmijIeL
      KRRbCnrtGvpaEy+LLXywmMOjXAgv+nE8y43fHYaesTPQcViuIh30IRMJwrQsAAKOG2344knM
      Za4nTK4LG8DeRQPFZgePvvtDpFLcxh5vVR1VVfHi1Ws27nA4jJnZWSiKgna7PRKNp3d/cnx8
      PQa4MrC3kTbexTTNOV4MQKDoMalQNwFFbw8PD5FOp0f6dd40suzVPJgYf9IOifzxxJyapmHn
      9UssdUsQJ8xhs15GQwihUixCMPuoNJtIBqIIZNMoFYsI+EKw9Q5C8Sz69RLimQzC/ij63RZO
      iyeomDIezWWwGPNjXwtgKT7+vWu6gaNqA4JlYDkVu/KOLdvGi3IDT9bXIN9igM6J1yclKPlF
      3Lt/f+wqS7Ro2zYs28bh4RF0w4BPVdHudpFIJIa9bLlaj3digGnhNBJbrdbEggvKG79uHhAw
      dOeen5/DNE0kEolbC6jxCW3OCPU4BnAynHN13Hn9EjP1E0jiddU9C8839vFgfQW3TX7n9Raa
      nQ4WkhH4xgihrXIdy6sr8KvvJ/2c8PnOIe59/y+QSFytXx4HUntPTk/h9/uRiMdZrlCv1/fe
      JO820Ov10O/3WXo0IRAITGQA6gt6k61ZNU1DKBRCJBK5Iq1vA26rHXke3JjNGUHn4xGSJMGo
      lSFJN7F1RDxeH1/ZdV1ohoHdYgW5sB93sgk2XuDqc7f6GoLJ1Hsnftu24UsXbhTEpLHPzsyM
      fF4ul3FydPh+GQAYVgdRDg5hWnXppp4g8gLctieJQEE/HpMCbDwT8CuCJEmwBhoQ+MO7Q6ud
      Hs5rDaxnYlMFDMtdDUvLM2OPuQ0IgoCVAPDin36N9PwyCrOzONp9jY39IlL5WcznU2g2W1h5
      2616EkzTRPHkBPFo9P0wAL1g6sfjVGMkSUI4HGb9X7w691I3g+vYAaI43BUlGr2eh2Xaa/N/
      854wPi99GtB5uq4j++AZKi8/RViVIQoCFEn0lLrvC21tgHqzhfVs/ErVlxvqvT4QCEO95fwk
      LxiGiZg9QGf/DbbaLei9BnTTQrvTw8HBHjr1GjbfvMaTp8/wxWefYP7uOg6/eYmPfv5XKCQj
      I9cSRRGCokAf6MNtUm8TlCZRKpXg1XodGCYzhcNhRCIRxONx1vacfiib8rpSnAzMd/EejQO5
      eZ2RX2dxyzSES+pZMpOF7/H30Fx8iP3O7XY9mBYdbYBYQJ1I/LZtY7/SwGmzBwjC2Lrh20K1
      3UXVH0d4/Rl883eQn5mF5A/hhz/8PrRWHX1NQziZxYeP13G8uQl/LIb9w0PMr96/QvzA8N3c
      v38f/YF2tTfou8C2bZyenrJeLp1OB9lsliUxeWWYCoJwJV5A2XxUYcYzE59+7GQQKjWcRu8n
      j0EoFIKmaa6NmPhO07IsMxetz+dj3iy3XWWmUYnoe8MwEInFkM5m0dp+xb7/fSIdDmLnvIxY
      wAdRENDTDVS7fczFIyPPcVhvI5rLY+PNDnrFChayKfgUGYAAGrKmGzgtVzCbSb3zCnFYqUPM
      LuDunbsAwOI3hWwGn3/6KZ5+60Mogg5RlOBXZDyMpbCxdYAPn85BFq46JRrNJgxdR/n8DIlo
      FEKn07Gvu1u4FwaDAevhQm2wj4+PcffuXRTe7iryLnDLwdE0jaVO2PawfSFVBRGBU9icmMWy
      LKiqemW3djLMyWVK6pubOkL34reF4r93YwCnN8j5vyzLOD86gO/gFcLv2bB0Q/+t25PUOcMw
      mD1A2K62cNYd4HEyhP/4Yhc/fvYAJ5U6FtIJLOTSOKvUUS4VMRMJoiWqWJ0rwDQtQBhWhxnm
      sDzUN+H5OtoAx5qA+bv3rzhRbopy+QJHx8fQdR3JcACrS0u3xwB857V+v49QKMT+p1K19ynV
      iBlopeGDU9e573XyegaDASqVCgC4bgbhdu1xsQgqBH/9219iGbeXBUv3MywLx7UmllJxz2fU
      TRM7xQoAG7ZlYT2bGDn2oNoEIjH4e21E/CqO623opgVDEOCXRFiWjfu5BJp9DZ+cVBEN+lGs
      1fHTDx5DN02cHB2jrQ2wsrSIfCIGyaOly9ZFE/e//9NbSxSsVCooXVSwurKCVquFdvUC8zMF
      yDfxszvRbDavtLY+OTlBo9FgmZd+v//GQa1pQLlLhJu2RbkOs/B7mPE56JPgFYijYqJgJg/9
      fGeqfj/T4rfbh/ApMvbLVYR9KjIR9z3Jqu0eYqqEfOxq+nJLG0CJxrGQz+Crl1VkIkHczbr7
      5UOqgseZKGIBH8p+CcfHJzAsGw/zSQgAmr0Wvihd4Fv3ViG5ELn5Nuv4thigVC5jff0e2yC7
      WCzi9Lx46QXi049JZWi322wnRnqxhmGwfbZarRbrb0mp05qmMTckdRxIJBI3Cmj9sSMajTI7
      hIx/fpuecT2BvGDbNhbX7uLLrVe4E/Whow0Ae8iY3YHuSpiT0Oj2UWq28eF8Fo1QAOVmB41u
      D6okYSE9SsBtTYOh68i5MLNpWpD9Q5JJZTPo6z0EHaoMc++KInLRIZPNJ6565GIBH9YlEa9e
      byCWyUJVZPgVBfHwUBvJhf24KBWRn5md6hnr9TrebG4hEg5jppAfCZjZtg3TskdocNDvoSNg
      lAF2dnbYNp0U1KlWq8hkMuj1eqz4mzosfPLJJ3j8+DHq9TpjmNPTUywsLEBRFGQyGbTbbVbn
      +efIBJRbYtv2FXeu2y6JXsQvSRJrQLyzvQ1ZAA7qHUSCfggC0O5rCPl9+O3eKWaiQaTDQQRV
      BbppQRQEyGNWi1Krg48WcpiJhTETi8CwLMiShO1yDZphjER6I34/TvsDGJYNxRGcC/tUnLxN
      jfYpCjaKZTzLxW9cZBRUFdzLJvCmVEJIkXHS07C2toJYKIhIwI/ffPk5LEFEs9lCvz+s711Z
      XmbqdiwWQ7PZRKlURqlcRlgRUZgr4F/96/8T95fySM4vo3h6img4gEgkjvr5Pp4fN/HR4/t4
      +c1XMGBdMgCfRkpNW6nxkCzLaDabb/eJXYKmaTg9PUUoFML29jaWl5dRLpdZolmz2WRlkaIo
      MskYiUR+796N3xfIbesMklG0l+AWLzANA2fHx9jffI07j59BFARUOn38cG3uCmEVEjEclKso
      dgfoVRpoaQOEVQUPZzKec5sIBdDudN7aQ4BfVtDuD9AeGEPD1LJYanat28VMxA/ZJS1DFARo
      3S72zkpYyKWh57PoaB2EPAzaaWIZgiDgfm7o2dEuGgi9dUA0uj3cffwBQqEwMpkser0eqrUa
      9vb3Ua3V4ff5cHB4hGAohIXFRSyvrKB2uovX37zG+pNnONl+hcrFGSotDQ/u3seb2ikSgRnU
      WsP9JBTTQDgSGm6TSsZiPp+HrusIh8MjhmSn00Eul0MoFEKj0UA6nUav10M+n8fFxQX8fj+C
      wSD8fj86nQ5isRhKpRLbMZ1KHHu93tgtSv/UQSoP1TITM/j9fvynf/2/IOZXEVclGKIMAW9X
      A1GCahtIh4O4G5bRODuC1ajgB6uznlJ18W32pW3b6A90HBXLY4lMFkW0tMv4gmVZUCURAVWB
      Zpj4dPcIhVgEjV4fqUgYmu6+cZ8oCsj6JAhGH1++fANFlpHLxDy9ZNeFLAgwLQuSKKHR7WOl
      UGAZBKqqIhaLoVqtYmVldeQ8um+6UMC///sv8D/+xWP8l84drMUNpHsCVlcW0PinX6JmrqBb
      38P2po2ZfA6aKEHY2tqyFxYWWB+VwWCAXq/HCjf4vqHUO4gaOnktfdVqlTU3JR87tU6ntIg/
      x5WA7CgyjAeDAcqlEmwAR7/7Be4X0reem2TbNt4cnaHa7uDbiwVXgxIATustROShGtPoaah1
      +2gbNiQBWIyHEFBkWLaNUquLZCgAn3xzddVJE27vmj+Gvn9+VsGdO6sIqAqeV7pIzi5ibXV1
      5Biv8sZJsCwLr16/RqtRx/2VJUSoI8nZ2ZlN/fGp3ndvbw+RSASBQACdTof5wqPRKPN7C8Jw
      W1IycPv9PiKRCOuUJgjD3iu0uQG/2zz54G3bvtXWJ38M4BPdPvnF30K8OEWl3cW9mQwiAf97
      yU+ybBsbx+dYTUY8GWDr/ALLiRAkUcTORR0NzYQkAHOxIFKhd2t6dV2cNDroCjIEUYBsGgiI
      Q/Wq5IvDF4kClomHH30Xp6enUBQV+Xx+7PXGMYCu69jd2YFhmjC1HtZXViBzzC1TrWyj0WBu
      RPJq1Ot1VgNMKkwqlUKtVmMMcXR0hHA4zNSlYDCIbrfLPEnU55EYiTaGqNVqCAaDrJO0z+eb
      uqjkjxl8KZ7W7aCl2wgGgwgosivxj5Ns00IUBCQiIeyUa1jLJl3rCgTh8l4rqRj+j199gn/x
      w+/giy+/hvLkGaKch/qoXIEAG3OZtOc9//7TTyH74/j40R3Iztv1GzjSYtifvgAAIABJREFU
      g5iPXNoGtm3j5OICs+k0/LIE9f5HbAeYfl+DZZmYTyRGPGfz8/N48fIlYrEYZFmeKtWEL6s9
      OjpC8fwMj9ZWMdB1hEMzV7f/ouoZ0uUFQWA7rScSCSbRyHhTVRU+n49J+3w+D0mSWEOtdruN
      dDrN6nxpsOFwGLqus+ocsgUGgwE0TUOz2WTdlv1+/5/FyjC//gDF4yOs2G3PY8hRQH/fFPl4
      FJ2+hrN6C7Oc29G2beyVa1AEsDwfQRAQEXWc15o4K1WQ77Txzd4uMukCiqVT1HQBSdXA5v4R
      sqkkZmZyODu9QLvbghqK4oPlWfhDEUTFAf7pzTZUSUFMMXHU0rEc8+Hk/ARKbh0He0VEwlFc
      XBSxsryGN5sbeHlUwurKMsz9bZj9LlbW749NeV9bXcX29g4UVcX63btj52AwGODFixewbQuy
      KGFpJof5Rw8AAH6P5l7S3/zN3/xPABAOh3F+fo5YLAa/349QKMQ6KSiKwoqPqfyRktkCgQA7
      XpZlJulJ+vPgPST8bo5kiPd6PbYNKwXQ/pSRSKYAUcTJ/h5ifu/A3G0lJMaCATQ1HXvlKkKq
      DJ8sY+P8ApmgilwkOCI12wMNOzv7yCSSaBkm2p0aTk7bmJ2fgSpaiASDWMtGIYRT+OzTL7Ew
      m8VeqYKTagOPl2bx6y+/xPzCHdimjg/WFvHlxia2jysIh8P4YCGJN6d1nNc7yCSiCMoCmj0D
      iVgIQb+KhzNZpKDDqpWwfVJEdm5+RDLz46T8q1ZrKFid3/M4PT1FzK8gn04hHgkhHHIP9vFg
      C59pmsjlcigWi8hms9c21ERxuFl1Pp8fu58WEToZ2gBY5qZpmuh2u8ybFI1G/2h75kyL2fkF
      1Ipn6FVPEBiT/0JzcXS0j63zGvK5ApazCYgA+r0O4A+j26ojHk8C5gADC+h22oiGw/j8xRY+
      eHwfYb+CxUwSC+kEvt47RszXR8inYveigQ/msyP3W8rPIBNLIO5XYYoStmDh6VoWtXoJqUQK
      mbAKyTbhkyUEY3HMphOo1Fu4Hx22JP/5d76DdCyKetsHAcBSPo/ZmQDmEj5snl3gew/v4Oho
      H+lEHLVyD7lMBn7JBjgVMShL0Ft1Jui8CDsajeL45HSi2iNJImrVJuLR6Njy1JF5L5fLNk9k
      mqah1+ux9uL8LhzjJJUoDre4pF78bqD+nNR9jq+vJVuD4ga6riORSLhuPPGnBsuysLf5Bu3t
      V8gHR/uuWraNaqePgWVDgoW93X3cW8zjxWENInSkDMBOKpDCaTz/4hOo0RnYWgPfffIAv/r0
      U8ihDOxuDz//8XcQ9o/q3J9t7WMmqLCI7HWhaRos00DPFBBULt8BnyGr6/oV1/a0hUEbmoi7
      H/+Eqb5O8NfZ2NyEZVpYWV2Fn9MsnPfq9/vY291Bv9tBNplEITfK+E5cSc6hZqK9Xo95hcgN
      Sr8DgQBLbnPWxo57eE3TrqQ9U6oz34uUuLdWq0EURcYwf6oQRREr6/fRnVvAzjdfQK+WIGo9
      SP4ApPwCUvfmcHawi3S3gk7Uh8+2j2AZMhSrja9PW3iSXEajXoUSSkK2DeRmZyHqHSihJBRJ
      hKiYaGv6CAMIgoB78wUcnZ7hXXo7y4qKREBmm5Xwm1Fcx6PllN4HHR0r3/sLhMPhqVTA9bt3
      cXh4iH6vxxjA7Ty/348HDx/h8OgIwSvWucu4nCvAuAfgf4DhLu3dbpdtex8MBhGLxTwfyKtm
      1u1z27bRbDYRj8cRCAT+7GIH5Fw4OztDrXIB//Emwj43FcnG81ebuLN+B/4pk+Ms20a50cL5
      RQV3khGo7+DTd47ZiUlqiRO6aaHa09CduYOHT595nj+ySloWXr16jUwmg1zukp3d7kFtdQRB
      wO7eHrRWA+ur3nXTU6dnuqlAfE69JEmoVCpsAG7wsivcPuf7j3a7XbZ6/CkbxntbmzAsC0sr
      q/jmqy8xaDYQMzqIihYU1etVCHj8YH3kk0lZpwKAL3cP8a1CairidwtKuX3nde6053zdFRBK
      z2D20RKW0+mpBVqr1cb+wQFSqRQODg5QbzQAAP1eDx999NGIivzmzRu2u+TC/DzevG6jr2kj
      ahOPW8tPNk0TyWQSpVKJbabNg3rnXwf8g/Hp1n+qaBxsQ9T7eL71AjHRRsinQFJFYGyP5VF0
      BzoaoRTKZ6cQ+h08nruq4AiCAJ8oIHKNvcT4lX2Svcef44TXeeWuhpUn30d+xr2I3i2rwDRN
      bG1tQVV9+G//m79GrVZDNJLEwvwcAODNxgZT0SnVXpIkPLh/D5VKBfv7e2h3OyiWy1icm7ty
      z+PTs9stiqcN6tyM4XHF7W4qmDMX/M/BLbrwwXdR/OQXyIduvsldfWDizg+/jW7x32Mul/I8
      Lh2LQMBww4tJaQ188O5diN8LbU3HvhjBTwqFsec6GXBvfx8zhQJLokyn0yNjkyQZL1+9QjDg
      x2Aw3C9M9Q3nNpVKIZVKQVVV1C4uMNB1qI4akVane/tdISj1wcnR1yluoHgAT/D87pN/qkim
      UjCefoza179B4oY7PdrqsP6i3ulhJXG1NmBgGNjb20fj1Vd43W9CmlnGg6fPprr2ONf3dVUj
      HqfdAX7yz//7a1fnCcBYoXdnbTQp7rxYRMLRO2hhfh7hcBi//eIrrMzNYn52uAI1220cnhev
      sfZOCfLouPXNuQ74sPdNO8T9MSJTKCDx7Puo3LBrs9Gqv/XUyWj1r+6f0NMG6P/m/8W9s+eY
      rx1gUDlHWxtgYEznsbFtGyeVGl7t7OHLf/x7HJycXvn+8m9gYJjYPS/jrNbAQOviH79+gd1S
      HXtn5wCAvdMirGSBu4CJ8+IFzF4D5UYPjYsqnDMhCAIM00SlWkUoFIJe3cepdzCdoZDPuzpZ
      kokEfvrTnwKqD9t7+yhdVGCIMpLx+DASfJuStdFoIB6Pu+pzXiqQUz1ydln4Uzd+eQiCgFAk
      AjGWQvnoAEH5ejKopZvIrz9Eo6ch0G9daVvY6vVwcHSCfm4JdUv8/9s7s9+48iu/f+5SdWtf
      WCySxX2nKGpfuqV299jusR0jAy+ZGQR28poACRAEyUvgh/wFAeY5L3kIEGAQTAJnEmeQjO0e
      T7e7247crdYucRFJcSvurOVW1a275qFUJRbJokg1JVHi/QB64K2qy1vUOfee3/md8z10bcyw
      PPuYlZkp8rKfeKxxPzDAnQcP8Xz5a5qf3EYs5kj7m+lMtYHjkN7MMHHzBuuWjNfj4dHcIoXf
      /5LQxBdsLczy5fQCfn8AScvzm7/5n0xpEk65yPi6SvvQAJ/88v+yWSjx64/+Hp9T4O9uTeO1
      TbLZNDfvTuITNT7++GNsX4y/+R//DV8oxsTtr8ApcePhEmo+R2db47x+I9URgJXVVSzbRgmE
      6OzrJ9XRQaK5+WhDoKqSgK7rNdXo6kVUewP2yhDtfFps31cIBoNvjfFvp6k5iXnuXTZvfUaT
      /2B1T4ZpEek/hSzLRIIB/IXdadOWWJSuS9fIffILmvU8Eg5tpU0oQf6LTW4vDOGJVBrdDb2M
      6A8ycmoUryyxspUlNPkFMa2SZVFsE1FTuf/FDUy9THhxnAFDxZq7zZbsI2mZhOyKOnNA20TI
      zqOuTpFUJM7LOumFR6ynBvnge9eYnJklEA6ymjE4d+Yco8NNFGM+nK0F4s2drC2uMzu/Rk9/
      NzMTU6zn8oRzmwx1DdCV1KHnIurC7dr3rIZTe80b3slSepne/v5dG3bxePxoHaC6eKka7vYL
      qlaFVksgqgJYwK46kOqGSzgcfuN3gRshCAItqRRa8QKFx3cJNkyDVrBsmydqmavfOgNAbmON
      8I47nmFa3Jt8jPfz/0W3kd91jrBZIrxwp+6YJsgspTqJ+xXmJh7SX9ysveZ3TEZmbuw6j4xN
      wixWv0jteHskwHS2REYS6A55iXkN7MuXGbh4nS4EJie9XOjtJ7c6h6p0EDEnaDt1ioDXJtCc
      wi+W+cXPf87FP/5T3r1ynbNjg3gkBcVr0ymC2fcsn3+Q3WaoRCSJZLJhI5aQTqedg9ZNPI9G
      4c9emKZZ66F1HKdWEVitKo3FYi9VReK44DgOTyYn0Kbu0rTHjADdtFgtWyipbgbGztWeoOml
      JdJ/+C2dkWeVlJZtM/VkDuHjn9P09C7+PGxgKdiGiE2qsHogWcSD4DgO851nufKzv0CWG8vn
      V20lk82Sz2aJxeIYpkFi2wCTRvbUqCFr++/SNI2iVqavf+/NMHE/bc7DUJUIP+gdu1rlt/3J
      UK0Lelsb6PdCEAR6hoZJXPoG85pDoWxg2jYl3WBRsyi09HDu+z9m7PI7deFjqr0dT+uztknH
      cRAFgaHeHvLtI41+3S5EoLOwTPsRGn+VxNI4U/duN3y9eu1TU49ZWV6hq6uLSCRcZ/xQX4Ww
      8/M7KxR2vsfr9fJkdrbhNchVFbfDDLloxHb1tYNSbZOUJIlMJlOb43WSEASBZFuKxD/4AfOz
      M2RyWYLROOd7eva9obT0DpL9YpFY0E96dZ319CJdA0MIK3Ov8Op3UzVs2bHY2NyoOwa779wl
      rcTZsbHnnq/Ra89rut8vkpCBWpfW1zG8QqHwwlPYBUGopLsMA7/fX6sIParQ7E1BFEV6djR8
      74dpPpvVLMoyvi9/RfqLX9FtHiBn+AqQHQtn+h58+N1939cUbyKXy9Upelt6iYnHcwwMDeGR
      BLRSEcu2kZUAiixi6Rqm6EGR95/PvLC4xDvXrjW+Rvj6QqyCIFDtKy4Wi5RKpUMNMwiFQsiy
      XBPSMgzjhZXdTgqO4zBz5ytWFldJRYJoW+s0GwVkXn25SKM7dDbQRKB3dxfXzvdHIhEyW1vb
      HMDh888/Y3BkhM/+3xcMpqL8/tZd3rt2HZ+vzI37Ewy3x/hqYYPRoVMYmSXKcpSx4d66ME7T
      NKyn/eiNqD0bvF4vuq6/0F23Gj7Ztk06nSYYDLK0tFQLrRKJBJubm7XZwB0dHXUj7LcP4obK
      xtebvuv7sjEMg5Xf/h80G+4GE/TMfoH4Gox/P/KJLvpPN96FXl1drYlb+QOV6ONZClyhta2D
      yanHLKx5ODPcy+bqApISRrdMippJz+Aom8vTlAtFJmemGB3urY2K0nWdjUyWs+fO7XuNNQeo
      5vAPSjU23djYqKvcrD6ONE2r6QtVRbOy2SxdXV0YhlHnADuN3TX+57O1sU7nwl3CegFTEJGd
      ox0D1YiM4CXm7JaR3wt9c5Vyqbjna4ZhMD8/XxFQtiwmpyYJBYNcuXwZgJbmML/5zW9o7xkm
      uzTFk5zFcF8HkhLGs7KE7niJh4MUSyHmsjmST6MH27ZZWFzEMC3OX7jw3KRMXT/A82ZyVd+X
      zWZrG13VsKVav1OVrasWMFUzO8ViEb/fX7u7V408EomciHTnUZOef8LCz35CwHimIv0qbhz3
      W0/TNHwGc2WBwPRtEmahYQi06okg/em/5Oy3vrvntc0vLCACis+HAGxubTE0OPjca9heNFcd
      iLKwuIhhmHh9Pnp7ew88IKXO8qoTWbanIKvGqqoqpVIJURRrOfqqfApUNrqKxSKBQGDPSX4n
      bUH7sokmkkxEkgQ2Xl3GxwFiXX2cvfou8C7jk+dZ+Nv/ih5uIqBuoPmjeB2TVGYBgBYjx+Zf
      /0ceyRLD731rV2o70dTE3Nw8HR0de1Z7Po+q9tRWNsfA4GCtEeYw1DmALMs1yW9RFCkWi6iq
      iiAIRCIRwuFwbS7WXulOn8/XsOurEUc9wfGk4Pf7EZtT8IocQEekJCkEU121Y8ODA2y1/Gts
      08Tn9+PxyGhambn//Be06VkMUaIs+9j65X+n98p7u6KLqvCaAy+0B7G2vk4wHOHM2bMv/L3q
      xHG3C9lW8/Otra21ZpTn5firIdJhSp9f1iTHtx1BEPC09SBM3KjbDHsZYZADTF/9IbKucamv
      r+4uHY88a2gXBIFyWUe0KmvJ5cv/kMEf/lPKhfyeIYkgVGa5HfaKy+UymWyOZGvroecG70SG
      Svyuqmqt4X270R92l1hRlEPN93WfAC+O2DHAbKIfYfouBWQ6vQ43sxbfaquICMzkNfrCB4uF
      n+Q1esI+Vos6TQFvXWgwE2zjwuUrhHZkavZiaXGBkK2zqUQY/ME/oTmZhGSy4fuTLUnWNzZI
      Nter0C0vLzP+4AGKR+biO+/Woor04iKfffIxP/7JT7+28QPIxWIR27axLItUKlVXo/OiVAdl
      7BUKybKMoig1AVk34/PidL/7Acuf/wrbESgYJgsmBESHO6s5HhUseoIS6bxGKhrk/mqOlrCP
      bEFntDnAV6sqLSEfaVXjYkuE8a0CE3kdu2yQjAVRCxqdUT8zWwVKPh1leprzZyq7tfs1x3R2
      dTMt+ZAkL9IBkhuqqhKPRuuO6brO0sI8Z9qbUTwe7n51k/7hEXRdR03P8Y0PPqC5ubFTHQa5
      qscZDAbJZDIvvJu7ne1Sf9v/WNVZA67RHw1GsUDLwn2WgbAEGQs8wKZhI5k2skfhYlzixppG
      NKCQKRt0hHwolk386c8jUR/pgk5H2I8NSB6R5pCHNdumzSvwRJbZCLUyPDTU8Dq2/3/6fQre
      D/+MjdUVyrq+byvso0fjeL2eOglOVVWZvnOT9kiYSLBSwTnW2sTKk0kU2YM3FGH4zP65/cMg
      zM/PO9VanOXl5X2V3Q5DVSq8GvtVZwi4HB0FVeXmv/lzAltLSICOgOA4qLqJI4qEPRJ+CcoW
      pIs6Sb8HWRDwSTCTr/yc1QwiPi+epzbsFWChZJL0yRheP/cJM/SDnzI60Hvg66qkvh3WcnlU
      wcvIpau7MkCFQoGVlRX6+/oolUpMjj9i7Oy5Smp0c4X25O5+5+Vckb5L7xypTlTdPoCmaRVF
      gSMSpq3OC65OhndToUeLrut89O//BZ2zN+t6W4/iCTvTMox5/psYmyv80Te/eajP1okhWDZz
      lofRM88yNUtLS2xtbTF2uiJce/f2bUJmieWSQUiwaU/EiYaCdedb3Moz9M57Ry6SVvdsCgaD
      LC8v09raeiSL06oOqN/vPzHlza8Sj8eD1DmIMHvzyM5pA4+H3qf3Oz+go7OLW3fvfa3ziaLA
      0vgjbATGzpzBtm2y2Sxjp09j2zaFQgHbKNPRkqDNsuu0+x3HYTNfQPeHOXX9gwNvbh2GOgew
      LAufz3eouv69qKZUq6nUt0HS5LjSOnoePv2rIzufKiq0vvcdwgEP/+Uv/4pgc5LOoEzAH+TB
      40kujgyjlnSCfgWtrCF7FLBNdNPB55Uolk1CPi/FchmvV8HUy1wZ7GUmn6nNifD7fCwtLpJN
      L6JgEX6aDJF3yLcsqyU6Tl+gKdFY/uXrsksaUZIkVldXD70rVyUUCtUVs22fEeBy9GQzGW79
      2z+nubBeO/Yif2tDEJlWkgQ++BOufLtSunDj919gShb3P/8YVYxzcbQDn67y6Z1xLpy5iiXb
      BCQJraSiZkzOjrXx17/8LR9cvcy67SEiQ2ltgfEt+N4Hl7EEic28WpE7sS0unx5pMMxDYC2n
      0nbm0pGkOvdj1/L86wwnrk552Y5r+C+XUDiM1HMKHnz6wuewEHhy6U+48L0fEnoqegxQLKp4
      vQItbR1c6x9iK7uO5PHzR++9T0zyoLS1srEwTanoVHqWV9Z5Z6yfTNHi9PkxNqdvs4qfloBD
      XzKOANiJMBNLa5weaJxVWsnkiPefeunGD3s4gOM4NDU1kclkiMfjDRUb9soFu2HOq0cURTzD
      53EefHrgHVUHeNRzhaC6QTSTRhdlgkNniUbqZcrfe/89bt6+w6WzZ4iGIwx1tiKJAvmiRtDv
      QxBFWodPcevOLYphL9cvnMUwbbweGUkSSZ06x2B/GVGq9HYYpsnC2hbx6O7B2QBqSSPrSPSd
      v0pkx97Ay2LPBK0oirVBeNvZOSfAvbsfD8Ij5zEFEelpSfRBxHMj3QOMffivyKsFpAbSiYvp
      ZYZbYkQC9bv6kW0ZGlGWuXLpSu3n7TNABEnC6/UhiQJTi8vkNYNT/T2E9qgSWM0XifYMcG7H
      tJiXzZ4OYFlWbRje9ja1KtU7fXVmgG3bNQlzl1eLIAi09Q7wwBclXtp67vsdoIBMIbOJz+fb
      N7Pi9/spZQq7HOB5aLrB8maGbLGE7Kk0Wo309dZKKXaSzpfou/hObebEq6ThXrUsy7U8frU0
      QpKk2iwwd5F7fPAqCpa4f/g52zyA99r3Ka8vk7p0ndEDbEqGggE2Ng6/KTq5tEp3RzuPl+6T
      TDRxeWy04Xst20aXPK/F+GEfB7Asi2g0WhuXVB1T6XZvHT8CgQB2SxfMrNcdd4A1OUy5/yyp
      D39Ed3c3cPD/s2xexXPAoRzr2TxbarHWgxsLBXnv4nnKhrHv53TDRMu/vib+PR2gOhlyu3Kb
      a+jHF0EQkJTd4cXD/mv0fvfHdEUixHdo7TwPwzRZXVlhMLH3/K4qtm1zby5NR2sLQ/2tdRFB
      0O8j6G8cYmm6zppaon/s3GuzrzoHEAShVrDm8uYgCAK+kQvw6PPaMcdx8Boa7alUw+ko+yGJ
      ItFolAcLS1we6N71esXQBSzbxuPxkIzHqhfT8JymZZHOlxA8XrBtIm3tXLg88FrlL+ssvbpr
      6/Lmkbz8Ppu/+E/47GcN6x2LD/jqd59x/VsfHvp8oijS1dlBOVvRCq32d+umSb5YIqB4+XJy
      ltZkku62g43hW8qqnPvgw2NlY7t6gl3eTNr7BpjtPYtv+svasazkIzWw/3T1vTBMk4nH04iC
      wEZOpSnkx3YcPJLM3EaGtuYEmyWTy2OjBPbJIjmOg26Y8HRKfTDZdqyMH3Y4wNfZBXZ5vXi9
      Xgb/+c+4/R/+HRHJRipkmRv9NmdSbYc+19ziEr2JKD6vl3IiilosITgOea3M+eHBXdKGe8Xv
      lmWTLpaJtXdx/949dE3jh392/Wt9x5dBzQHcRpU3G0GA1bU08xd+wPV3zpJZXWHsBatwLcui
      UNLwKwo+rxffPmXsjWxmKV/g3PvfRpIkOrt7Kgv1Y1gpIHs8nrdqAstJJbc0hR3uor11k2xm
      jTW1xPr6Fluri+CLceXMwRWjbcsiGt8/+7MfhmkRammv2dRxC3u2I54kKfK3GcnjQdNKtAgK
      t+aXePcb75Gen2J1M8v9icmGlb16qUBJr+8BHxro597MPGW9sQJcWSswt7SMbu7uG1lc36Sj
      t2/XcaOsYR0v9UYETdMct4ThbcBh4t5XLGcsIkGBmZk5FFFA0osEm5KM9u29CXbjxuc4SozT
      va1MziyQ00z0whbT6U0utsfBF2akp4P1bIagV2ZuXeXy6SEe3PsC25cgn8/R2xpD8IaZn59j
      dPQ09yceUop38Z13zjC9rDLcGePe42WSnhILJZEL5y4SDx0Pmzu+zyaXQyIwfOYSw1RaJZcX
      lxjr7Sawz0YUtsHE1BNMeZ24p0SqvYsbH33MpcHTXA360Is6Kdng3uMnNLWlMLaWmX14l/a+
      IRzbZCG9Qk97K3dnlnh3tI98fpPf3ryFaciMjSb49UcfYVkCWnEY0xIwBIuBwUGmp6e4fK7x
      PIBXiesAbyFer5dLV99lZWZqXwdQsxtc++b3kItrFAWBSDBAKhpgc3kaTzBMZ1MTIcUmKMl0
      t8R5lJ4hFgsjOhAMN/HBqUGCkoGieCmVCshKAJ8vzPryApPTc4x0dVF0/HS2NnP34WPaelJE
      QyFKwcIr/GvsjxsCvaU4jsPtm1/SHvbv0nrdj8czs4hGmZ7U8ze39iuEXHG8jF24eMirfvW4
      Sf+3FEEQ6BscYiOTqzv+vDbX9lQbGbXAneknfH7nAZu53dMmd55ne49I9WfB82YogLgO8BYT
      iUQo7lGNuZ8TyJLM3ekn9PT2oQSDlZ3cPdjvSVI2jNrAi+OO6wBvMYIgEGluwWjgBHs5gixL
      nBsZ4s7tWywuLpKMRckXi9yZnCZfqB920cgJfF4v6tPheMcd1wHecrp7ekmvH9wYBUFAkmUC
      kSiDAwPceTzLYkalu7+fmZW1A5/HLh2fhe5+uFmgtxyP14sjHG6j8+zoKaBSG2bZNp6nO7mZ
      bI67M3Oc7ulE2qdmbHl9gw219EYMO3SfAG85giDgeUFFNVEUa8YP0N/TjT8URis/2yGuKnwv
      rK5h2zaLq+tkZ8bxr82ytpz+2tf/snEd4C1HEAREj/eFRM72YrCvl4eLK9jbFELWtjKsPh7n
      D59+jDr7iN6onyb/m5Fad0OgE0C8OUl+LV0nZ/KilMtlFBFufvUVolZA9geJYTCWqG9qz9si
      PcmWr/37XjauA5wA2tra+PtbXzLU3UnggJN7trO0vMzcxCPCiSSFYonO5ia0rUXaEhWHEoTd
      OX9H8R9bNfDZibtoniZO9XUczAGqY05FUazJpFQb512OP6IoEozGeTA+SSwWZbC358CfnZ2b
      R515yPmQBzW7yLwp82RqjXOx/dcVUjRxbJurltayOEKeJ+X0wRzAsiw0TavJJAqCUBunely/
      pEs9g6dGWZNALRSZmV+gr6sTeL6KnGWapJTK6yHFw6gCBH37rinKpkWs7/CtmK8Cs5RhcnwK
      E4n4leGDOYAsy8Tj8ZpsevWf20H25tDU1MQcIr0dKe4/nq5rf23kBIZpsrLwhCaPxZOVLZqi
      McK+7U99B91yUHZo+i/7ElwfOngDzqvEcgR+9I9/imIVyBmWWwx3klhcWEBbnicUCDA1N08k
      EiHVkqwZ/3YnqGZ4Mrk807/7Wx6lC8TRON/XAYJAWPFwe3wCK5RkJFmZH13QNB5taLRcOE9z
      +zAXxga4eesBF8+fYmZulWgkSraQIRFvxivZBCMJPNLrvYm6DnCCcByHiYcPiNg6Xo+HufQy
      q5tbNCea6O3sqDmAZVmVmb+6zoMbn9NRTvOXt5a51NmMbWk4okjQEejvSjK+kkOwDQzT5PPZ
      Va5//0ckW5tojoV5PLuEbRl0t4SZdboZdFYIjpxnZfIBsiRx5d3iSX1wAAAGVklEQVRriK85
      iHCzQCcIQRAYHj3NnZtfkhJFulNtdKfaWN3c5MbNWwwP9KOVNdK3/1DRt7JtBmMBPIKPa2Mj
      XGgJ8Pu795jLG1zrTvLV1BzRpiSr6RVM2c83uppQDYeWllaCikx/t8TC2hZdnW0o3l6Cm9Da
      EieUDXAn43vtxg/uE+BEUi6XeXDjd3S3VIZTP5yYxFx6TMAjo5kW/bF64dyDrvXKpoVz8UMG
      TjUWwwW4++Xv6Tv3DiHP60+gvP4rcHnlKIpCorsPtVgCYKi/j1DfKJIAfdHKPkG1xOEwiQ5F
      llDTc89939nL146F8YPrACeWzq4uNtRKxaYsyzx+PM7/vjfLo7X8nkafzamoxQK6BUU1x2bR
      IKcW2akJUcxsvoKrPzrcNcAJRRRFlPCzMUTfef8qmpSkkJngs7tpTvd18mhuCVEQ8SgBOkJ+
      8oVloqlR8mtZ5oorhASBge4WHswscXa4n3uT0zyW43RdnscjW8Rbe/Eec8Ud9wlwgok0JShp
      5ac/CcQjUeSWDvKFLW5NLRJJtGCbDrJtsrS8wfZRGZ0xP/NbJbKqiqXn+Lsvp+js7KYnqjA7
      M8vS/BT64WdrvHJcBzjBpNrbWX8aBiF6SMZDWLaJzxckEQkS8ysk42FioQCxaIhwMIIiQjAY
      oDOVIux1sC0bjxKgvz3B9JNZdBNkQWNutYD8BliXmwU64Ty8d5dmmdq83gfj4/Rpq6yoGi0h
      X23y5PMWwwXdRLds8p4A13/6z17yVR8db4CPurxMuvv6Sa89a5lMtbUxafmh5zQbxfI+n6zg
      OA4rnij+D35Iy/d/QtvVb77Myz1y3EXwCScQCJDRyrQ/rQeKR6PEL11hfildq/HZ7+7vAN7W
      Trqezh+j5fj3AGzHfQK4EIrtnshu6Dpeaf+CR8dxWPNEOHX1et0xy7IwTfPIutBeJq4DnHAE
      QSAUjWLZ9Rn9gprHtOx9jThn2HRd/+Nd8uemaaKqKoZhHHsncB3AhZaWVjI7RpWOnjrFrO3b
      9wmgSn4Se4Q8kiShKArFYhFN0461E7gO4EI0GqVg1CftLdsmoDfW9snrJqZp8NlvPuLzTz6m
      WKyIZlUdJpfLoWka+XyeQqFwbJ3AXQS7VMKg5hbKegnFW2l4WU6nSQXqW14dx2HTlrCTXTT1
      jzDU3YMkSXXdgo7j1OJ/266EUKVSCUVRjuUYLtcBXADo7u3l5qefMNLVDoBeLiPtqFfeMqHj
      u/+IRDJZd9y3TXfIcRyKxSK2bSMIAqZpUigUkGWZaDR67BzADYFcgIoRj1y4xEa2ogZtOc4u
      49C8wV3GvxPbtmuL3+pTIRgMomka5XL52IVCrgO41GhKJPAkkhS1Mr5gCNWoT2XK4di+n3cc
      h3K5jKqqtb5xr9eLKIoYhoFlWa4DuBxfBEGgt3+AgiiztTRH5Ol6wHYclgyRtrGDDbzwer0V
      RbodwgmlUunYZYXcNYBLHYIgMHLmHF5JYuGLTxBwiAye4eyldzlIzZhlWYiiiGmaNd0ox3FQ
      FIVSqYRpmvh8+6dXXyVuMZxLQxzHwTCMAyu8OY5DLpejXK7UEJVKJbxeb01IDSoD/FpaWmpP
      ideNGwK5NEQQhAMb/8bGBplMprYIrmJZlf0FwzDQdR2/38/m5mZtgfy6cUMglyNhfHycwcFB
      1tbWME2TVCrF1tYWyWSSXC6HbduUSiVisRiqqlIul8nn8wwODuJ/Ab3So8J9ArgcCT09PczO
      zmIYBoIg1DbEbNtG0zRUVcXn81EqlUin0xSLRYrFIqqqPv/kLxF3DeByJKysrBAIBCiXy+i6
      jqZpCIKAbdvYto3H48Hn89X2ByzLQpZlksnkaxVZdkMglyOhtbUyV1iWZSzLqhm11+utGTxQ
      2x0OBAI0NTXVzTB+HbghkMuRUtUSqu4B6LpOuVyuu8s7jnNs6oJcB3A5UjweTy30EUWx1iuw
      PTN0mOzSy8YNgVyOlKrRC4JAuVxGlmU8Hg+SJNVKISRJeu5cgleF6wAuR4ogCPj9fgqFAn6/
      H8MwsG2bcrlMMBhEURRCodCxmS/hOoDLkaMoCsFgsLaLLEkSsVgMRVFqIdJxwXUAlyNHEASi
      0SiWZWHbNpIkIUnSsTL8Kq4DuLwUquXQx53jf4UuLi8R1wFcTjTy9vysi8tJ4/8DH5ZWVxjA
      bvcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid-19 India Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V3MkWZbn93MRWktomVqWnuruajWz22Ozs7S1NeOQZvvMLzLfg2+kGR/W
      +DAkjbvTM2wx1V1VWZ1ZmVWVEkgACa1CSw8PV3wIXE9HIKAyswSq8DeDAfBw93Bx7rnn/I+4
      kuM4Duc4x48U8nd9Aec4x3eJ8wFwjh81zgfAOX7UOB8A5/hR43wAnONHjfMBcI4fNc4HwDl+
      1DgfAOf4UeN8AJzjR43zAXCOHzXOB8A5ftQ4HwDn+FHjfACc40eN8wFwjh81zgfAOX7UOB8A
      5/hR43wAnONHjTc6AGzbfpOnw7FtzgvWzvFN4sAAcByHr+7d4e69e8wtrR558Iu5ryi3TPf/
      //7P/917Iua++pz/9X/7rwC0qjt8/OdP+MPvfkel1e3tY+p8+vkXh55/+dFnPN2o8eX9+1in
      uatznOOEUPs3NLfnKNkp/uavrgCg1Ut89WSBYDTBtak0qxW4OJFjbm6OZDCAoqhUC5s8W1pn
      fbv08kSOjRNKk46sA3D3zj0++M3f4++U+e0nd/gf/vaX4NhUanWMTpW/3H2GPwBDE5cZSQe4
      f/9rSpvLTH94g2AkgoLD3OOvqTU1RqcvMz6U/nae0Dl+0DgwA2yurDA6NeX+/4ePP+X9Dz8k
      0tlmueHj2ddf0KlusFHqsLu2SKNr8/Gn9/jww79ifDiDY9t0u11sZK5evuSe59LFKT790yc8
      frZEo1Hf952GXqfV9fP+O7d5+PBr/vyHP3LtnQ+4dmkagMXFBQCGh4dRVImP//TJN/EszvEj
      xIEBMDY9w9rSItAzhxxJQgEi4QBt3SGiWnxy9zHvv3+7d4BjI6s+pL3j9XadZ8/maHWMfecd
      vXCD3/z651y5MEYuP3LgQnz+l+fomA6RgAIe+9/U6vzhzle88+57xEO+177xc5wDBphAkaFL
      5Dc+5+69eyTSeT64fY1P73yOZcl89FEaLXqT/+fTBRIBmVgqR8CncmE8y527X6BbEsFoktu3
      k9iWzpdffIGu6zz4+glXZ0Z4PLdIW+vw85/+rPdlskwuk0ZRg6RTNkgKuUya2eEJPv7TZ0h6
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage comparison of deaths vs cured' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage distribution of Confirmed Cases (each state)' width='192'>
      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
      3R8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population of chosen state' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      OzEv1v8DxvDxph81/CAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='107' name='Sheet 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State wise no of confirmed cases' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Statistics of a chosen state' width='192'>
      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
      c3BS3eLg/mIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='statistics of hospital beds' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
